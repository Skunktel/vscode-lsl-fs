{
    "ACTIVE": {
        "prefix": "ACTIVE",
        "body": [
           "ACTIVE$0"
        ],
        "description": "ACTIVE"
    },
    "AGENT": {
        "prefix": "AGENT",
        "body": [
           "AGENT$0"
        ],
        "description": "AGENT"
    },
    "AGENT_ALWAYS_RUN": {
        "prefix": "AGENT_ALWAYS_RUN",
        "body": [
           "AGENT_ALWAYS_RUN$0"
        ],
        "description": "AGENT_ALWAYS_RUN"
    },
    "AGENT_ATTACHMENTS": {
        "prefix": "AGENT_ATTACHMENTS",
        "body": [
           "AGENT_ATTACHMENTS$0"
        ],
        "description": "AGENT_ATTACHMENTS"
    },
    "AGENT_AUTOPILOT": {
        "prefix": "AGENT_AUTOPILOT",
        "body": [
           "AGENT_AUTOPILOT$0"
        ],
        "description": "AGENT_AUTOPILOT"
    },
    "AGENT_AWAY": {
        "prefix": "AGENT_AWAY",
        "body": [
           "AGENT_AWAY$0"
        ],
        "description": "AGENT_AWAY"
    },
    "AGENT_BUSY": {
        "prefix": "AGENT_BUSY",
        "body": [
           "AGENT_BUSY$0"
        ],
        "description": "AGENT_BUSY"
    },
    "AGENT_BY_LEGACY_NAME": {
        "prefix": "AGENT_BY_LEGACY_NAME",
        "body": [
           "AGENT_BY_LEGACY_NAME$0"
        ],
        "description": "AGENT_BY_LEGACY_NAME"
    },
    "AGENT_BY_USERNAME": {
        "prefix": "AGENT_BY_USERNAME",
        "body": [
           "AGENT_BY_USERNAME$0"
        ],
        "description": "AGENT_BY_USERNAME"
    },
    "AGENT_CROUCHING": {
        "prefix": "AGENT_CROUCHING",
        "body": [
           "AGENT_CROUCHING$0"
        ],
        "description": "AGENT_CROUCHING"
    },
    "AGENT_FLYING": {
        "prefix": "AGENT_FLYING",
        "body": [
           "AGENT_FLYING$0"
        ],
        "description": "AGENT_FLYING"
    },
    "AGENT_IN_AIR": {
        "prefix": "AGENT_IN_AIR",
        "body": [
           "AGENT_IN_AIR$0"
        ],
        "description": "AGENT_IN_AIR"
    },
    "AGENT_LIST_PARCEL": {
        "prefix": "AGENT_LIST_PARCEL",
        "body": [
           "AGENT_LIST_PARCEL$0"
        ],
        "description": "returns only agents on the same parcel where the script is running."
    },
    "AGENT_LIST_PARCEL_OWNER": {
        "prefix": "AGENT_LIST_PARCEL_OWNER",
        "body": [
           "AGENT_LIST_PARCEL_OWNER$0"
        ],
        "description": "returns only agents on any parcel in the region where the parcel owner is the same as the owner of the parcel under the scripted object."
    },
    "AGENT_LIST_REGION": {
        "prefix": "AGENT_LIST_REGION",
        "body": [
           "AGENT_LIST_REGION$0"
        ],
        "description": "returns any/all agents in the region."
    },
    "AGENT_MOUSELOOK": {
        "prefix": "AGENT_MOUSELOOK",
        "body": [
           "AGENT_MOUSELOOK$0"
        ],
        "description": "AGENT_MOUSELOOK"
    },
    "AGENT_ON_OBJECT": {
        "prefix": "AGENT_ON_OBJECT",
        "body": [
           "AGENT_ON_OBJECT$0"
        ],
        "description": "AGENT_ON_OBJECT"
    },
    "AGENT_SCRIPTED": {
        "prefix": "AGENT_SCRIPTED",
        "body": [
           "AGENT_SCRIPTED$0"
        ],
        "description": "AGENT_SCRIPTED"
    },
    "AGENT_SITTING": {
        "prefix": "AGENT_SITTING",
        "body": [
           "AGENT_SITTING$0"
        ],
        "description": "AGENT_SITTING"
    },
    "AGENT_TYPING": {
        "prefix": "AGENT_TYPING",
        "body": [
           "AGENT_TYPING$0"
        ],
        "description": "AGENT_TYPING"
    },
    "AGENT_WALKING": {
        "prefix": "AGENT_WALKING",
        "body": [
           "AGENT_WALKING$0"
        ],
        "description": "AGENT_WALKING"
    },
    "ALL_SIDES": {
        "prefix": "ALL_SIDES",
        "body": [
           "ALL_SIDES$0"
        ],
        "description": "ALL_SIDES"
    },
    "ANIM_ON": {
        "prefix": "ANIM_ON",
        "body": [
           "ANIM_ON$0"
        ],
        "description": "ANIM_ON"
    },
    "ATTACH_AVATAR_CENTER": {
        "prefix": "ATTACH_AVATAR_CENTER",
        "body": [
           "ATTACH_AVATAR_CENTER$0"
        ],
        "description": "Avatar Center: avatar center/root"
    },
    "ATTACH_BACK": {
        "prefix": "ATTACH_BACK",
        "body": [
           "ATTACH_BACK$0"
        ],
        "description": "Spine: back"
    },
    "ATTACH_BELLY": {
        "prefix": "ATTACH_BELLY",
        "body": [
           "ATTACH_BELLY$0"
        ],
        "description": "Stomach: belly/stomach/tummy"
    },
    "ATTACH_CHEST": {
        "prefix": "ATTACH_CHEST",
        "body": [
           "ATTACH_CHEST$0"
        ],
        "description": "Chest: chest/sternum"
    },
    "ATTACH_CHIN": {
        "prefix": "ATTACH_CHIN",
        "body": [
           "ATTACH_CHIN$0"
        ],
        "description": "Chin: chin"
    },
    "ATTACH_FACE_JAW": {
        "prefix": "ATTACH_FACE_JAW",
        "body": [
           "ATTACH_FACE_JAW$0"
        ],
        "description": "Jaw: jaw"
    },
    "ATTACH_FACE_LEAR": {
        "prefix": "ATTACH_FACE_LEAR",
        "body": [
           "ATTACH_FACE_LEAR$0"
        ],
        "description": "Alt Left Ear: left ear (extended)"
    },
    "ATTACH_FACE_LEYE": {
        "prefix": "ATTACH_FACE_LEYE",
        "body": [
           "ATTACH_FACE_LEYE$0"
        ],
        "description": "Alt Left Eye: left eye (extended)"
    },
    "ATTACH_FACE_REAR": {
        "prefix": "ATTACH_FACE_REAR",
        "body": [
           "ATTACH_FACE_REAR$0"
        ],
        "description": "Alt Right Ear: right ear (extended)"
    },
    "ATTACH_FACE_REYE": {
        "prefix": "ATTACH_FACE_REYE",
        "body": [
           "ATTACH_FACE_REYE$0"
        ],
        "description": "Alt Right Eye: right eye (extended)"
    },
    "ATTACH_FACE_TONGUE": {
        "prefix": "ATTACH_FACE_TONGUE",
        "body": [
           "ATTACH_FACE_TONGUE$0"
        ],
        "description": "Tongue: tongue"
    },
    "ATTACH_GROIN": {
        "prefix": "ATTACH_GROIN",
        "body": [
           "ATTACH_GROIN$0"
        ],
        "description": "Groin: groin"
    },
    "ATTACH_HEAD": {
        "prefix": "ATTACH_HEAD",
        "body": [
           "ATTACH_HEAD$0"
        ],
        "description": "Skull: head"
    },
    "ATTACH_HIND_LFOOT": {
        "prefix": "ATTACH_HIND_LFOOT",
        "body": [
           "ATTACH_HIND_LFOOT$0"
        ],
        "description": "Left Hind Foot: left hind foot"
    },
    "ATTACH_HIND_RFOOT": {
        "prefix": "ATTACH_HIND_RFOOT",
        "body": [
           "ATTACH_HIND_RFOOT$0"
        ],
        "description": "Right Hind Foot: right hind foot"
    },
    "ATTACH_HUD_BOTTOM": {
        "prefix": "ATTACH_HUD_BOTTOM",
        "body": [
           "ATTACH_HUD_BOTTOM$0"
        ],
        "description": "HUD Bottom"
    },
    "ATTACH_HUD_BOTTOM_LEFT": {
        "prefix": "ATTACH_HUD_BOTTOM_LEFT",
        "body": [
           "ATTACH_HUD_BOTTOM_LEFT$0"
        ],
        "description": "HUD Bottom Left"
    },
    "ATTACH_HUD_BOTTOM_RIGHT": {
        "prefix": "ATTACH_HUD_BOTTOM_RIGHT",
        "body": [
           "ATTACH_HUD_BOTTOM_RIGHT$0"
        ],
        "description": "HUD Bottom Right"
    },
    "ATTACH_HUD_CENTER_1": {
        "prefix": "ATTACH_HUD_CENTER_1",
        "body": [
           "ATTACH_HUD_CENTER_1$0"
        ],
        "description": "HUD Center"
    },
    "ATTACH_HUD_CENTER_2": {
        "prefix": "ATTACH_HUD_CENTER_2",
        "body": [
           "ATTACH_HUD_CENTER_2$0"
        ],
        "description": "HUD Center 2"
    },
    "ATTACH_HUD_TOP_CENTER": {
        "prefix": "ATTACH_HUD_TOP_CENTER",
        "body": [
           "ATTACH_HUD_TOP_CENTER$0"
        ],
        "description": "HUD Top"
    },
    "ATTACH_HUD_TOP_LEFT": {
        "prefix": "ATTACH_HUD_TOP_LEFT",
        "body": [
           "ATTACH_HUD_TOP_LEFT$0"
        ],
        "description": "HUD Top Left"
    },
    "ATTACH_HUD_TOP_RIGHT": {
        "prefix": "ATTACH_HUD_TOP_RIGHT",
        "body": [
           "ATTACH_HUD_TOP_RIGHT$0"
        ],
        "description": "HUD Top Right"
    },
    "ATTACH_LEAR": {
        "prefix": "ATTACH_LEAR",
        "body": [
           "ATTACH_LEAR$0"
        ],
        "description": "Left Ear: left ear"
    },
    "ATTACH_LEFT_PEC": {
        "prefix": "ATTACH_LEFT_PEC",
        "body": [
           "ATTACH_LEFT_PEC$0"
        ],
        "description": "Left Pec: left pectoral"
    },
    "ATTACH_LEYE": {
        "prefix": "ATTACH_LEYE",
        "body": [
           "ATTACH_LEYE$0"
        ],
        "description": "Left Eye: left eye"
    },
    "ATTACH_LFOOT": {
        "prefix": "ATTACH_LFOOT",
        "body": [
           "ATTACH_LFOOT$0"
        ],
        "description": "Left Foot: left foot"
    },
    "ATTACH_LHAND": {
        "prefix": "ATTACH_LHAND",
        "body": [
           "ATTACH_LHAND$0"
        ],
        "description": "Left Hand: left hand"
    },
    "ATTACH_LHAND_RING1": {
        "prefix": "ATTACH_LHAND_RING1",
        "body": [
           "ATTACH_LHAND_RING1$0"
        ],
        "description": "Left Ring Finger: left ring finger"
    },
    "ATTACH_LHIP": {
        "prefix": "ATTACH_LHIP",
        "body": [
           "ATTACH_LHIP$0"
        ],
        "description": "Left Hip: left hip"
    },
    "ATTACH_LLARM": {
        "prefix": "ATTACH_LLARM",
        "body": [
           "ATTACH_LLARM$0"
        ],
        "description": "L Lower Arm: left lower arm"
    },
    "ATTACH_LLLEG": {
        "prefix": "ATTACH_LLLEG",
        "body": [
           "ATTACH_LLLEG$0"
        ],
        "description": "L Lower Leg: left lower leg"
    },
    "ATTACH_LSHOULDER": {
        "prefix": "ATTACH_LSHOULDER",
        "body": [
           "ATTACH_LSHOULDER$0"
        ],
        "description": "Left Shoulder: left shoulder"
    },
    "ATTACH_LUARM": {
        "prefix": "ATTACH_LUARM",
        "body": [
           "ATTACH_LUARM$0"
        ],
        "description": "L Upper Arm: left upper arm"
    },
    "ATTACH_LULEG": {
        "prefix": "ATTACH_LULEG",
        "body": [
           "ATTACH_LULEG$0"
        ],
        "description": "L Upper Leg: left upper leg"
    },
    "ATTACH_LWING": {
        "prefix": "ATTACH_LWING",
        "body": [
           "ATTACH_LWING$0"
        ],
        "description": "Left Wing: left wing"
    },
    "ATTACH_MOUTH": {
        "prefix": "ATTACH_MOUTH",
        "body": [
           "ATTACH_MOUTH$0"
        ],
        "description": "Mouth: mouth"
    },
    "ATTACH_NECK": {
        "prefix": "ATTACH_NECK",
        "body": [
           "ATTACH_NECK$0"
        ],
        "description": "Neck: neck"
    },
    "ATTACH_NOSE": {
        "prefix": "ATTACH_NOSE",
        "body": [
           "ATTACH_NOSE$0"
        ],
        "description": "Nose: nose"
    },
    "ATTACH_PELVIS": {
        "prefix": "ATTACH_PELVIS",
        "body": [
           "ATTACH_PELVIS$0"
        ],
        "description": "Pelvis: pelvis"
    },
    "ATTACH_REAR": {
        "prefix": "ATTACH_REAR",
        "body": [
           "ATTACH_REAR$0"
        ],
        "description": "Right Ear: right ear"
    },
    "ATTACH_REYE": {
        "prefix": "ATTACH_REYE",
        "body": [
           "ATTACH_REYE$0"
        ],
        "description": "Right Eye: right eye"
    },
    "ATTACH_RFOOT": {
        "prefix": "ATTACH_RFOOT",
        "body": [
           "ATTACH_RFOOT$0"
        ],
        "description": "Right Foot: right foot"
    },
    "ATTACH_RHAND": {
        "prefix": "ATTACH_RHAND",
        "body": [
           "ATTACH_RHAND$0"
        ],
        "description": "Right Hand: right hand"
    },
    "ATTACH_RHAND_RING1": {
        "prefix": "ATTACH_RHAND_RING1",
        "body": [
           "ATTACH_RHAND_RING1$0"
        ],
        "description": "Right Ring Finger: right ring finger"
    },
    "ATTACH_RHIP": {
        "prefix": "ATTACH_RHIP",
        "body": [
           "ATTACH_RHIP$0"
        ],
        "description": "Right Hip: right hip"
    },
    "ATTACH_RIGHT_PEC": {
        "prefix": "ATTACH_RIGHT_PEC",
        "body": [
           "ATTACH_RIGHT_PEC$0"
        ],
        "description": "Right Pec: right pectoral"
    },
    "ATTACH_RLARM": {
        "prefix": "ATTACH_RLARM",
        "body": [
           "ATTACH_RLARM$0"
        ],
        "description": "R Lower Arm: right lower arm"
    },
    "ATTACH_RLLEG": {
        "prefix": "ATTACH_RLLEG",
        "body": [
           "ATTACH_RLLEG$0"
        ],
        "description": "R Lower Leg: right lower leg"
    },
    "ATTACH_RSHOULDER": {
        "prefix": "ATTACH_RSHOULDER",
        "body": [
           "ATTACH_RSHOULDER$0"
        ],
        "description": "Right Shoulder: right shoulder"
    },
    "ATTACH_RUARM": {
        "prefix": "ATTACH_RUARM",
        "body": [
           "ATTACH_RUARM$0"
        ],
        "description": "R Upper Arm: right upper arm"
    },
    "ATTACH_RULEG": {
        "prefix": "ATTACH_RULEG",
        "body": [
           "ATTACH_RULEG$0"
        ],
        "description": "R Upper Leg: right upper leg"
    },
    "ATTACH_RWING": {
        "prefix": "ATTACH_RWING",
        "body": [
           "ATTACH_RWING$0"
        ],
        "description": "Right Wing: right wing"
    },
    "ATTACH_TAIL_BASE": {
        "prefix": "ATTACH_TAIL_BASE",
        "body": [
           "ATTACH_TAIL_BASE$0"
        ],
        "description": "Tail Base: tail base"
    },
    "ATTACH_TAIL_TIP": {
        "prefix": "ATTACH_TAIL_TIP",
        "body": [
           "ATTACH_TAIL_TIP$0"
        ],
        "description": "Tail Tip: tail tip"
    },
    "CAMERA_ACTIVE": {
        "prefix": "CAMERA_ACTIVE",
        "body": [
           "CAMERA_ACTIVE$0"
        ],
        "description": "CAMERA_ACTIVE"
    },
    "CAMERA_BEHINDNESS_ANGLE": {
        "prefix": "CAMERA_BEHINDNESS_ANGLE",
        "body": [
           "CAMERA_BEHINDNESS_ANGLE$0"
        ],
        "description": "CAMERA_BEHINDNESS_ANGLE"
    },
    "CAMERA_BEHINDNESS_LAG": {
        "prefix": "CAMERA_BEHINDNESS_LAG",
        "body": [
           "CAMERA_BEHINDNESS_LAG$0"
        ],
        "description": "CAMERA_BEHINDNESS_LAG"
    },
    "CAMERA_DISTANCE": {
        "prefix": "CAMERA_DISTANCE",
        "body": [
           "CAMERA_DISTANCE$0"
        ],
        "description": "CAMERA_DISTANCE"
    },
    "CAMERA_FOCUS": {
        "prefix": "CAMERA_FOCUS",
        "body": [
           "CAMERA_FOCUS$0"
        ],
        "description": "CAMERA_FOCUS"
    },
    "CAMERA_FOCUS_LAG": {
        "prefix": "CAMERA_FOCUS_LAG",
        "body": [
           "CAMERA_FOCUS_LAG$0"
        ],
        "description": "CAMERA_FOCUS_LAG"
    },
    "CAMERA_FOCUS_LOCKED": {
        "prefix": "CAMERA_FOCUS_LOCKED",
        "body": [
           "CAMERA_FOCUS_LOCKED$0"
        ],
        "description": "CAMERA_FOCUS_LOCKED"
    },
    "CAMERA_FOCUS_OFFSET": {
        "prefix": "CAMERA_FOCUS_OFFSET",
        "body": [
           "CAMERA_FOCUS_OFFSET$0"
        ],
        "description": "CAMERA_FOCUS_OFFSET"
    },
    "CAMERA_FOCUS_THRESHOLD": {
        "prefix": "CAMERA_FOCUS_THRESHOLD",
        "body": [
           "CAMERA_FOCUS_THRESHOLD$0"
        ],
        "description": "CAMERA_FOCUS_THRESHOLD"
    },
    "CAMERA_PITCH": {
        "prefix": "CAMERA_PITCH",
        "body": [
           "CAMERA_PITCH$0"
        ],
        "description": "CAMERA_PITCH"
    },
    "CAMERA_POSITION": {
        "prefix": "CAMERA_POSITION",
        "body": [
           "CAMERA_POSITION$0"
        ],
        "description": "CAMERA_POSITION"
    },
    "CAMERA_POSITION_LAG": {
        "prefix": "CAMERA_POSITION_LAG",
        "body": [
           "CAMERA_POSITION_LAG$0"
        ],
        "description": "CAMERA_POSITION_LAG"
    },
    "CAMERA_POSITION_LOCKED": {
        "prefix": "CAMERA_POSITION_LOCKED",
        "body": [
           "CAMERA_POSITION_LOCKED$0"
        ],
        "description": "CAMERA_POSITION_LOCKED"
    },
    "CAMERA_POSITION_THRESHOLD": {
        "prefix": "CAMERA_POSITION_THRESHOLD",
        "body": [
           "CAMERA_POSITION_THRESHOLD$0"
        ],
        "description": "CAMERA_POSITION_THRESHOLD"
    },
    "CHANGED_ALLOWED_DROP": {
        "prefix": "CHANGED_ALLOWED_DROP",
        "body": [
           "CHANGED_ALLOWED_DROP$0"
        ],
        "description": "CHANGED_ALLOWED_DROP"
    },
    "CHANGED_COLOR": {
        "prefix": "CHANGED_COLOR",
        "body": [
           "CHANGED_COLOR$0"
        ],
        "description": "CHANGED_COLOR"
    },
    "CHANGED_INVENTORY": {
        "prefix": "CHANGED_INVENTORY",
        "body": [
           "CHANGED_INVENTORY$0"
        ],
        "description": "CHANGED_INVENTORY"
    },
    "CHANGED_LINK": {
        "prefix": "CHANGED_LINK",
        "body": [
           "CHANGED_LINK$0"
        ],
        "description": "CHANGED_LINK"
    },
    "CHANGED_MEDIA": {
        "prefix": "CHANGED_MEDIA",
        "body": [
           "CHANGED_MEDIA$0"
        ],
        "description": "CHANGED_MEDIA"
    },
    "CHANGED_OWNER": {
        "prefix": "CHANGED_OWNER",
        "body": [
           "CHANGED_OWNER$0"
        ],
        "description": "CHANGED_OWNER"
    },
    "CHANGED_REGION": {
        "prefix": "CHANGED_REGION",
        "body": [
           "CHANGED_REGION$0"
        ],
        "description": "CHANGED_REGION"
    },
    "CHANGED_REGION_START": {
        "prefix": "CHANGED_REGION_START",
        "body": [
           "CHANGED_REGION_START$0"
        ],
        "description": "CHANGED_REGION_START"
    },
    "CHANGED_SCALE": {
        "prefix": "CHANGED_SCALE",
        "body": [
           "CHANGED_SCALE$0"
        ],
        "description": "CHANGED_SCALE"
    },
    "CHANGED_SHAPE": {
        "prefix": "CHANGED_SHAPE",
        "body": [
           "CHANGED_SHAPE$0"
        ],
        "description": "CHANGED_SHAPE"
    },
    "CHANGED_TELEPORT": {
        "prefix": "CHANGED_TELEPORT",
        "body": [
           "CHANGED_TELEPORT$0"
        ],
        "description": "CHANGED_TELEPORT"
    },
    "CHANGED_TEXTURE": {
        "prefix": "CHANGED_TEXTURE",
        "body": [
           "CHANGED_TEXTURE$0"
        ],
        "description": "CHANGED_TEXTURE"
    },
    "CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES": {
        "prefix": "CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES",
        "body": [
           "CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES$0"
        ],
        "description": "TRUE matches pre-existing behavior. If set to FALSE, character will not attempt to catch up on lost time when pathfinding performance is low, potentially providing more reliable movement (albeit while potentially appearing to be more stuttery).\n- Default: TRUE\n- Range / Values: TRUE or FALSE"
    },
    "CHARACTER_AVOIDANCE_MODE": {
        "prefix": "CHARACTER_AVOIDANCE_MODE",
        "body": [
           "CHARACTER_AVOIDANCE_MODE$0"
        ],
        "description": "Allows you to specify that a character should not try to avoid other characters, should not try to avoid dynamic obstacles (relatively fast moving objects and avatars), or both. This is framed in the positive sense ([CHARACTER_AVOIDANCE_MODE, AVOID_CHARACTERS] would create a character that avoided other characters but not agents or moving vehicles). Setting this parameter to AVOID_NONE causes the character to not avoid either category.\n- Default: AVOID_CHARACTERS | AVOID_DYNAMIC_OBSTACLES\n- Range / Values: Combinable Flags: AVOID_CHARACTERS, AVOID_DYNAMIC_OBSTACLES, AVOID_NONE"
    },
    "CHARACTER_DESIRED_SPEED": {
        "prefix": "CHARACTER_DESIRED_SPEED",
        "body": [
           "CHARACTER_DESIRED_SPEED$0"
        ],
        "description": "Speed of pursuit in meters per second.\n- Default: 6\n- Range / Values: [0.2, 40.0]"
    },
    "CHARACTER_DESIRED_TURN_SPEED": {
        "prefix": "CHARACTER_DESIRED_TURN_SPEED",
        "body": [
           "CHARACTER_DESIRED_TURN_SPEED$0"
        ],
        "description": "The character's maximum speed while turning--note that this is only loosely enforced (i.e., a character may turn at higher speeds under certain conditions)\n- Default: 6\n- Range / Values: [0.02, 40.0]"
    },
    "CHARACTER_LENGTH": {
        "prefix": "CHARACTER_LENGTH",
        "body": [
           "CHARACTER_LENGTH$0"
        ],
        "description": "Set collision capsule length\nIf the value is less than twice the radius plus 0.1m, it will be set to twice the radius plus 0.1m\n- Default: \n- Range / Values: (0.0, 10.0]"
    },
    "CHARACTER_MAX_ACCEL": {
        "prefix": "CHARACTER_MAX_ACCEL",
        "body": [
           "CHARACTER_MAX_ACCEL$0"
        ],
        "description": "The character's maximum acceleration rate.\n- Default: 20\n- Range / Values: [0.5, 40.0]"
    },
    "CHARACTER_MAX_DECEL": {
        "prefix": "CHARACTER_MAX_DECEL",
        "body": [
           "CHARACTER_MAX_DECEL$0"
        ],
        "description": "The character's maximum deceleration rate.\n- Default: 30\n- Range / Values: [0.5, 60.0]"
    },
    "CHARACTER_MAX_SPEED": {
        "prefix": "CHARACTER_MAX_SPEED",
        "body": [
           "CHARACTER_MAX_SPEED$0"
        ],
        "description": "The character's maximum speed. Affects speed when avoiding dynamic obstacles and when traversing low-walkability objects in TRAVERSAL_TYPE_FAST mode.\n- Default: 20\n- Range / Values: [1, 40.0]"
    },
    "CHARACTER_MAX_TURN_RADIUS": {
        "prefix": "CHARACTER_MAX_TURN_RADIUS",
        "body": [
           "CHARACTER_MAX_TURN_RADIUS$0"
        ],
        "description": "The character's turn radius when traveling at CHARACTER_DESIRED_TURN_SPEED\n- Default: 1.25\n- Range / Values: [0.1, 10.0]"
    },
    "CHARACTER_ORIENTATION": {
        "prefix": "CHARACTER_ORIENTATION",
        "body": [
           "CHARACTER_ORIENTATION$0"
        ],
        "description": "Set the character orientation.\n- Default: VERTICAL\n- Range / Values: VERTICAL, HORIZONTAL"
    },
    "CHARACTER_RADIUS": {
        "prefix": "CHARACTER_RADIUS",
        "body": [
           "CHARACTER_RADIUS$0"
        ],
        "description": "Set collision capsule radius.\n- Default: \n- Range / Values: [0.125, 5.0]"
    },
    "CHARACTER_STAY_WITHIN_PARCEL": {
        "prefix": "CHARACTER_STAY_WITHIN_PARCEL",
        "body": [
           "CHARACTER_STAY_WITHIN_PARCEL$0"
        ],
        "description": "FALSE matches traditional behavior. If set to TRUE, treat the parcel boundaries as one-way obstacles (will re-enter but can't leave on it's own).\n- Default: Depends*\n- Range / Values: TRUE or FALSE"
    },
    "CHARACTER_TYPE": {
        "prefix": "CHARACTER_TYPE",
        "body": [
           "CHARACTER_TYPE$0"
        ],
        "description": "Specifies which walkability coefficient will be used by this character.\n- Default: CHARACTER_TYPE_NONE\n- Range / Values: CHARACTER_TYPE_A, CHARACTER_TYPE_B, CHARACTER_TYPE_C, CHARACTER_TYPE_D, CHARACTER_TYPE_NONE"
    },
    "CHARACTER_TYPE_A": {
        "prefix": "CHARACTER_TYPE_A",
        "body": [
           "CHARACTER_TYPE_A$0"
        ],
        "description": "CHARACTER_TYPE_A"
    },
    "CHARACTER_TYPE_B": {
        "prefix": "CHARACTER_TYPE_B",
        "body": [
           "CHARACTER_TYPE_B$0"
        ],
        "description": "CHARACTER_TYPE_B"
    },
    "CHARACTER_TYPE_C": {
        "prefix": "CHARACTER_TYPE_C",
        "body": [
           "CHARACTER_TYPE_C$0"
        ],
        "description": "CHARACTER_TYPE_C"
    },
    "CHARACTER_TYPE_D": {
        "prefix": "CHARACTER_TYPE_D",
        "body": [
           "CHARACTER_TYPE_D$0"
        ],
        "description": "CHARACTER_TYPE_D"
    },
    "CHARACTER_TYPE_NONE": {
        "prefix": "CHARACTER_TYPE_NONE",
        "body": [
           "CHARACTER_TYPE_NONE$0"
        ],
        "description": "CHARACTER_TYPE_NONE"
    },
    "CLICK_ACTION_BUY": {
        "prefix": "CLICK_ACTION_BUY",
        "body": [
           "CLICK_ACTION_BUY$0"
        ],
        "description": "CLICK_ACTION_BUY"
    },
    "CLICK_ACTION_NONE": {
        "prefix": "CLICK_ACTION_NONE",
        "body": [
           "CLICK_ACTION_NONE$0"
        ],
        "description": "CLICK_ACTION_NONE"
    },
    "CLICK_ACTION_OPEN": {
        "prefix": "CLICK_ACTION_OPEN",
        "body": [
           "CLICK_ACTION_OPEN$0"
        ],
        "description": "CLICK_ACTION_OPEN"
    },
    "CLICK_ACTION_OPEN_MEDIA": {
        "prefix": "CLICK_ACTION_OPEN_MEDIA",
        "body": [
           "CLICK_ACTION_OPEN_MEDIA$0"
        ],
        "description": "CLICK_ACTION_OPEN_MEDIA"
    },
    "CLICK_ACTION_PAY": {
        "prefix": "CLICK_ACTION_PAY",
        "body": [
           "CLICK_ACTION_PAY$0"
        ],
        "description": "CLICK_ACTION_PAY"
    },
    "CLICK_ACTION_PLAY": {
        "prefix": "CLICK_ACTION_PLAY",
        "body": [
           "CLICK_ACTION_PLAY$0"
        ],
        "description": "CLICK_ACTION_PLAY"
    },
    "CLICK_ACTION_SIT": {
        "prefix": "CLICK_ACTION_SIT",
        "body": [
           "CLICK_ACTION_SIT$0"
        ],
        "description": "CLICK_ACTION_SIT"
    },
    "CLICK_ACTION_TOUCH": {
        "prefix": "CLICK_ACTION_TOUCH",
        "body": [
           "CLICK_ACTION_TOUCH$0"
        ],
        "description": "CLICK_ACTION_TOUCH"
    },
    "CLICK_ACTION_ZOOM": {
        "prefix": "CLICK_ACTION_ZOOM",
        "body": [
           "CLICK_ACTION_ZOOM$0"
        ],
        "description": "CLICK_ACTION_ZOOM"
    },
    "CONTENT_TYPE_ATOM": {
        "prefix": "CONTENT_TYPE_ATOM",
        "body": [
           "CONTENT_TYPE_ATOM$0"
        ],
        "description": "application/atom+xml"
    },
    "CONTENT_TYPE_FORM": {
        "prefix": "CONTENT_TYPE_FORM",
        "body": [
           "CONTENT_TYPE_FORM$0"
        ],
        "description": "application/x-www-form-urlencoded"
    },
    "CONTENT_TYPE_HTML": {
        "prefix": "CONTENT_TYPE_HTML",
        "body": [
           "CONTENT_TYPE_HTML$0"
        ],
        "description": "text/html"
    },
    "CONTENT_TYPE_JSON": {
        "prefix": "CONTENT_TYPE_JSON",
        "body": [
           "CONTENT_TYPE_JSON$0"
        ],
        "description": "application/json"
    },
    "CONTENT_TYPE_LLSD": {
        "prefix": "CONTENT_TYPE_LLSD",
        "body": [
           "CONTENT_TYPE_LLSD$0"
        ],
        "description": "application/llsd+xml"
    },
    "CONTENT_TYPE_RSS": {
        "prefix": "CONTENT_TYPE_RSS",
        "body": [
           "CONTENT_TYPE_RSS$0"
        ],
        "description": "application/rss+xml"
    },
    "CONTENT_TYPE_TEXT": {
        "prefix": "CONTENT_TYPE_TEXT",
        "body": [
           "CONTENT_TYPE_TEXT$0"
        ],
        "description": "text/plain"
    },
    "CONTENT_TYPE_XHTML": {
        "prefix": "CONTENT_TYPE_XHTML",
        "body": [
           "CONTENT_TYPE_XHTML$0"
        ],
        "description": "application/xhtml+xml"
    },
    "CONTENT_TYPE_XML": {
        "prefix": "CONTENT_TYPE_XML",
        "body": [
           "CONTENT_TYPE_XML$0"
        ],
        "description": "application/xml"
    },
    "CONTROL_BACK": {
        "prefix": "CONTROL_BACK",
        "body": [
           "CONTROL_BACK$0"
        ],
        "description": "Move back control (↓ or S)"
    },
    "CONTROL_DOWN": {
        "prefix": "CONTROL_DOWN",
        "body": [
           "CONTROL_DOWN$0"
        ],
        "description": "Move down control (PgDn or C)"
    },
    "CONTROL_FWD": {
        "prefix": "CONTROL_FWD",
        "body": [
           "CONTROL_FWD$0"
        ],
        "description": "Move forward control (↑ or W)"
    },
    "CONTROL_LBUTTON": {
        "prefix": "CONTROL_LBUTTON",
        "body": [
           "CONTROL_LBUTTON$0"
        ],
        "description": "Left mouse button control"
    },
    "CONTROL_LEFT": {
        "prefix": "CONTROL_LEFT",
        "body": [
           "CONTROL_LEFT$0"
        ],
        "description": "Move left control (⇧ Shift-← or ⇧ Shift-A [← or A in mouselook])"
    },
    "CONTROL_ML_LBUTTON": {
        "prefix": "CONTROL_ML_LBUTTON",
        "body": [
           "CONTROL_ML_LBUTTON$0"
        ],
        "description": "Left mouse button control while in mouselook"
    },
    "CONTROL_RIGHT": {
        "prefix": "CONTROL_RIGHT",
        "body": [
           "CONTROL_RIGHT$0"
        ],
        "description": "Move right control (⇧ Shift-→ or ⇧ Shift-D [→ or D in mouselook])"
    },
    "CONTROL_ROT_LEFT": {
        "prefix": "CONTROL_ROT_LEFT",
        "body": [
           "CONTROL_ROT_LEFT$0"
        ],
        "description": "Rotate left control (← or A)"
    },
    "CONTROL_ROT_RIGHT": {
        "prefix": "CONTROL_ROT_RIGHT",
        "body": [
           "CONTROL_ROT_RIGHT$0"
        ],
        "description": "Rotate right control (→ or D)"
    },
    "CONTROL_UP": {
        "prefix": "CONTROL_UP",
        "body": [
           "CONTROL_UP$0"
        ],
        "description": "Move up control (PgUp or E)"
    },
    "DATA_BORN": {
        "prefix": "DATA_BORN",
        "body": [
           "DATA_BORN$0"
        ],
        "description": "DATA_BORN"
    },
    "DATA_NAME": {
        "prefix": "DATA_NAME",
        "body": [
           "DATA_NAME$0"
        ],
        "description": "DATA_NAME"
    },
    "DATA_ONLINE": {
        "prefix": "DATA_ONLINE",
        "body": [
           "DATA_ONLINE$0"
        ],
        "description": "DATA_ONLINE"
    },
    "DATA_PAYINFO": {
        "prefix": "DATA_PAYINFO",
        "body": [
           "DATA_PAYINFO$0"
        ],
        "description": "DATA_PAYINFO"
    },
    "DATA_RATING": {
        "prefix": "DATA_RATING",
        "body": [
           "DATA_RATING$0"
        ],
        "description": "DATA_RATING"
    },
    "DATA_SIM_POS": {
        "prefix": "DATA_SIM_POS",
        "body": [
           "DATA_SIM_POS$0"
        ],
        "description": "DATA_SIM_POS"
    },
    "DATA_SIM_RATING": {
        "prefix": "DATA_SIM_RATING",
        "body": [
           "DATA_SIM_RATING$0"
        ],
        "description": "DATA_SIM_RATING"
    },
    "DATA_SIM_STATUS": {
        "prefix": "DATA_SIM_STATUS",
        "body": [
           "DATA_SIM_STATUS$0"
        ],
        "description": "DATA_SIM_STATUS"
    },
    "DEBUG_CHANNEL": {
        "prefix": "DEBUG_CHANNEL",
        "body": [
           "DEBUG_CHANNEL$0"
        ],
        "description": "DEBUG_CHANNEL"
    },
    "DEG_TO_RAD": {
        "prefix": "DEG_TO_RAD",
        "body": [
           "DEG_TO_RAD$0"
        ],
        "description": "DEG_TO_RAD"
    },
    "EOF": {
        "prefix": "EOF",
        "body": [
           "EOF$0"
        ],
        "description": "EOF"
    },
    "ERR_GENERIC": {
        "prefix": "ERR_GENERIC",
        "body": [
           "ERR_GENERIC$0"
        ],
        "description": "A nebulous and inexplicable error, nothing is known about it."
    },
    "ERR_MALFORMED_PARAMS": {
        "prefix": "ERR_MALFORMED_PARAMS",
        "body": [
           "ERR_MALFORMED_PARAMS$0"
        ],
        "description": "Parameters are malformed."
    },
    "ERR_PARCEL_PERMISSIONS": {
        "prefix": "ERR_PARCEL_PERMISSIONS",
        "body": [
           "ERR_PARCEL_PERMISSIONS$0"
        ],
        "description": "Permission lacked to perform task on specified parcel."
    },
    "ERR_RUNTIME_PERMISSIONS": {
        "prefix": "ERR_RUNTIME_PERMISSIONS",
        "body": [
           "ERR_RUNTIME_PERMISSIONS$0"
        ],
        "description": "Script lacks the runtime permission to perform the requested task."
    },
    "ERR_THROTTLED": {
        "prefix": "ERR_THROTTLED",
        "body": [
           "ERR_THROTTLED$0"
        ],
        "description": "Task has been throttled. Try again later."
    },
    "ESTATE_ACCESS_ALLOWED_AGENT_ADD": {
        "prefix": "ESTATE_ACCESS_ALLOWED_AGENT_ADD",
        "body": [
           "ESTATE_ACCESS_ALLOWED_AGENT_ADD$0"
        ],
        "description": "Add the agent to this estate's Allowed Residents list."
    },
    "ESTATE_ACCESS_ALLOWED_AGENT_REMOVE": {
        "prefix": "ESTATE_ACCESS_ALLOWED_AGENT_REMOVE",
        "body": [
           "ESTATE_ACCESS_ALLOWED_AGENT_REMOVE$0"
        ],
        "description": "Remove the agent from this estate's Allowed Residents list."
    },
    "ESTATE_ACCESS_ALLOWED_GROUP_ADD": {
        "prefix": "ESTATE_ACCESS_ALLOWED_GROUP_ADD",
        "body": [
           "ESTATE_ACCESS_ALLOWED_GROUP_ADD$0"
        ],
        "description": "Add the group to this estate's Allowed groups list."
    },
    "ESTATE_ACCESS_ALLOWED_GROUP_REMOVE": {
        "prefix": "ESTATE_ACCESS_ALLOWED_GROUP_REMOVE",
        "body": [
           "ESTATE_ACCESS_ALLOWED_GROUP_REMOVE$0"
        ],
        "description": "Remove the group from this estate's Allowed groups list."
    },
    "ESTATE_ACCESS_BANNED_AGENT_ADD": {
        "prefix": "ESTATE_ACCESS_BANNED_AGENT_ADD",
        "body": [
           "ESTATE_ACCESS_BANNED_AGENT_ADD$0"
        ],
        "description": "Add the agent to this estate's Banned residents list."
    },
    "ESTATE_ACCESS_BANNED_AGENT_REMOVE": {
        "prefix": "ESTATE_ACCESS_BANNED_AGENT_REMOVE",
        "body": [
           "ESTATE_ACCESS_BANNED_AGENT_REMOVE$0"
        ],
        "description": "Remove the agent from this estate's Banned residents list."
    },
    "FALSE": {
        "prefix": "FALSE",
        "body": [
           "FALSE$0"
        ],
        "description": "FALSE"
    },
    "FORCE_DIRECT_PATH": {
        "prefix": "FORCE_DIRECT_PATH",
        "body": [
           "FORCE_DIRECT_PATH$0"
        ],
        "description": "Makes character navigate in a straight line toward pos. May be set to TRUE or FALSE."
    },
    "HORIZONTAL": {
        "prefix": "HORIZONTAL",
        "body": [
           "HORIZONTAL$0"
        ],
        "description": "HORIZONTAL"
    },
    "HTTP_ACCEPT": {
        "prefix": "HTTP_ACCEPT",
        "body": [
           "HTTP_ACCEPT$0"
        ],
        "description": "HTTP_ACCEPT"
    },
    "HTTP_BODY_MAXLENGTH": {
        "prefix": "HTTP_BODY_MAXLENGTH",
        "body": [
           "HTTP_BODY_MAXLENGTH$0"
        ],
        "description": "HTTP_BODY_MAXLENGTH"
    },
    "HTTP_BODY_TRUNCATED": {
        "prefix": "HTTP_BODY_TRUNCATED",
        "body": [
           "HTTP_BODY_TRUNCATED$0"
        ],
        "description": "HTTP_BODY_TRUNCATED"
    },
    "HTTP_CUSTOM_HEADER": {
        "prefix": "HTTP_CUSTOM_HEADER",
        "body": [
           "HTTP_CUSTOM_HEADER$0"
        ],
        "description": "HTTP_CUSTOM_HEADER"
    },
    "HTTP_METHOD": {
        "prefix": "HTTP_METHOD",
        "body": [
           "HTTP_METHOD$0"
        ],
        "description": "HTTP_METHOD"
    },
    "HTTP_MIMETYPE": {
        "prefix": "HTTP_MIMETYPE",
        "body": [
           "HTTP_MIMETYPE$0"
        ],
        "description": "HTTP_MIMETYPE"
    },
    "HTTP_PRAGMA_NO_CACHE": {
        "prefix": "HTTP_PRAGMA_NO_CACHE",
        "body": [
           "HTTP_PRAGMA_NO_CACHE$0"
        ],
        "description": "HTTP_PRAGMA_NO_CACHE"
    },
    "HTTP_USER_AGENT": {
        "prefix": "HTTP_USER_AGENT",
        "body": [
           "HTTP_USER_AGENT$0"
        ],
        "description": "HTTP_USER_AGENT"
    },
    "HTTP_VERBOSE_THROTTLE": {
        "prefix": "HTTP_VERBOSE_THROTTLE",
        "body": [
           "HTTP_VERBOSE_THROTTLE$0"
        ],
        "description": "HTTP_VERBOSE_THROTTLE"
    },
    "HTTP_VERIFY_CERT": {
        "prefix": "HTTP_VERIFY_CERT",
        "body": [
           "HTTP_VERIFY_CERT$0"
        ],
        "description": "HTTP_VERIFY_CERT"
    },
    "INVENTORY_ALL": {
        "prefix": "INVENTORY_ALL",
        "body": [
           "INVENTORY_ALL$0"
        ],
        "description": "INVENTORY_ALL"
    },
    "INVENTORY_ANIMATION": {
        "prefix": "INVENTORY_ANIMATION",
        "body": [
           "INVENTORY_ANIMATION$0"
        ],
        "description": "INVENTORY_ANIMATION"
    },
    "INVENTORY_BODYPART": {
        "prefix": "INVENTORY_BODYPART",
        "body": [
           "INVENTORY_BODYPART$0"
        ],
        "description": "INVENTORY_BODYPART"
    },
    "INVENTORY_CLOTHING": {
        "prefix": "INVENTORY_CLOTHING",
        "body": [
           "INVENTORY_CLOTHING$0"
        ],
        "description": "INVENTORY_CLOTHING"
    },
    "INVENTORY_GESTURE": {
        "prefix": "INVENTORY_GESTURE",
        "body": [
           "INVENTORY_GESTURE$0"
        ],
        "description": "INVENTORY_GESTURE"
    },
    "INVENTORY_LANDMARK": {
        "prefix": "INVENTORY_LANDMARK",
        "body": [
           "INVENTORY_LANDMARK$0"
        ],
        "description": "INVENTORY_LANDMARK"
    },
    "INVENTORY_NONE": {
        "prefix": "INVENTORY_NONE",
        "body": [
           "INVENTORY_NONE$0"
        ],
        "description": "INVENTORY_NONE"
    },
    "INVENTORY_NOTECARD": {
        "prefix": "INVENTORY_NOTECARD",
        "body": [
           "INVENTORY_NOTECARD$0"
        ],
        "description": "INVENTORY_NOTECARD"
    },
    "INVENTORY_OBJECT": {
        "prefix": "INVENTORY_OBJECT",
        "body": [
           "INVENTORY_OBJECT$0"
        ],
        "description": "INVENTORY_OBJECT"
    },
    "INVENTORY_SCRIPT": {
        "prefix": "INVENTORY_SCRIPT",
        "body": [
           "INVENTORY_SCRIPT$0"
        ],
        "description": "INVENTORY_SCRIPT"
    },
    "INVENTORY_SETTING": {
        "prefix": "INVENTORY_SETTING",
        "body": [
           "INVENTORY_SETTING$0"
        ],
        "description": "INVENTORY_SETTING"
    },
    "INVENTORY_SOUND": {
        "prefix": "INVENTORY_SOUND",
        "body": [
           "INVENTORY_SOUND$0"
        ],
        "description": "INVENTORY_SOUND"
    },
    "INVENTORY_TEXTURE": {
        "prefix": "INVENTORY_TEXTURE",
        "body": [
           "INVENTORY_TEXTURE$0"
        ],
        "description": "INVENTORY_TEXTURE"
    },
    "JSON_APPEND": {
        "prefix": "JSON_APPEND",
        "body": [
           "JSON_APPEND$0"
        ],
        "description": "JSON_APPEND"
    },
    "JSON_ARRAY": {
        "prefix": "JSON_ARRAY",
        "body": [
           "JSON_ARRAY$0"
        ],
        "description": "JSON_ARRAY"
    },
    "JSON_DELETE": {
        "prefix": "JSON_DELETE",
        "body": [
           "JSON_DELETE$0"
        ],
        "description": "Used with llJsonSetValue to remove a key-value pair."
    },
    "JSON_FALSE": {
        "prefix": "JSON_FALSE",
        "body": [
           "JSON_FALSE$0"
        ],
        "description": "JSON_FALSE"
    },
    "JSON_INVALID": {
        "prefix": "JSON_INVALID",
        "body": [
           "JSON_INVALID$0"
        ],
        "description": "Value returned when inputs are not well formed."
    },
    "JSON_NULL": {
        "prefix": "JSON_NULL",
        "body": [
           "JSON_NULL$0"
        ],
        "description": "JSON_NULL"
    },
    "JSON_NUMBER": {
        "prefix": "JSON_NUMBER",
        "body": [
           "JSON_NUMBER$0"
        ],
        "description": "JSON_NUMBER"
    },
    "JSON_OBJECT": {
        "prefix": "JSON_OBJECT",
        "body": [
           "JSON_OBJECT$0"
        ],
        "description": "JSON_OBJECT"
    },
    "JSON_STRING": {
        "prefix": "JSON_STRING",
        "body": [
           "JSON_STRING$0"
        ],
        "description": "JSON_STRING"
    },
    "JSON_TRUE": {
        "prefix": "JSON_TRUE",
        "body": [
           "JSON_TRUE$0"
        ],
        "description": "JSON_TRUE"
    },
    "KFM_CMD_PAUSE": {
        "prefix": "KFM_CMD_PAUSE",
        "body": [
           "KFM_CMD_PAUSE$0"
        ],
        "description": "KFM_CMD_PAUSE"
    },
    "KFM_CMD_PLAY": {
        "prefix": "KFM_CMD_PLAY",
        "body": [
           "KFM_CMD_PLAY$0"
        ],
        "description": "KFM_CMD_PLAY"
    },
    "KFM_CMD_STOP": {
        "prefix": "KFM_CMD_STOP",
        "body": [
           "KFM_CMD_STOP$0"
        ],
        "description": "KFM_CMD_STOP"
    },
    "KFM_COMMAND": {
        "prefix": "KFM_COMMAND",
        "body": [
           "KFM_COMMAND$0"
        ],
        "description": "KFM_COMMAND"
    },
    "KFM_DATA": {
        "prefix": "KFM_DATA",
        "body": [
           "KFM_DATA$0"
        ],
        "description": "KFM_DATA"
    },
    "KFM_FORWARD": {
        "prefix": "KFM_FORWARD",
        "body": [
           "KFM_FORWARD$0"
        ],
        "description": "KFM_FORWARD"
    },
    "KFM_LOOP": {
        "prefix": "KFM_LOOP",
        "body": [
           "KFM_LOOP$0"
        ],
        "description": "KFM_LOOP"
    },
    "KFM_MODE": {
        "prefix": "KFM_MODE",
        "body": [
           "KFM_MODE$0"
        ],
        "description": "KFM_MODE"
    },
    "KFM_PING_PONG": {
        "prefix": "KFM_PING_PONG",
        "body": [
           "KFM_PING_PONG$0"
        ],
        "description": "KFM_PING_PONG"
    },
    "KFM_REVERSE": {
        "prefix": "KFM_REVERSE",
        "body": [
           "KFM_REVERSE$0"
        ],
        "description": "KFM_REVERSE"
    },
    "KFM_ROTATION": {
        "prefix": "KFM_ROTATION",
        "body": [
           "KFM_ROTATION$0"
        ],
        "description": "KFM_ROTATION"
    },
    "KFM_TRANSLATION": {
        "prefix": "KFM_TRANSLATION",
        "body": [
           "KFM_TRANSLATION$0"
        ],
        "description": "KFM_TRANSLATION"
    },
    "LAND_LEVEL": {
        "prefix": "LAND_LEVEL",
        "body": [
           "LAND_LEVEL$0"
        ],
        "description": "LAND_LEVEL"
    },
    "LAND_LOWER": {
        "prefix": "LAND_LOWER",
        "body": [
           "LAND_LOWER$0"
        ],
        "description": "LAND_LOWER"
    },
    "LAND_NOISE": {
        "prefix": "LAND_NOISE",
        "body": [
           "LAND_NOISE$0"
        ],
        "description": "LAND_NOISE"
    },
    "LAND_RAISE": {
        "prefix": "LAND_RAISE",
        "body": [
           "LAND_RAISE$0"
        ],
        "description": "LAND_RAISE"
    },
    "LAND_REVERT": {
        "prefix": "LAND_REVERT",
        "body": [
           "LAND_REVERT$0"
        ],
        "description": "LAND_REVERT"
    },
    "LAND_SMOOTH": {
        "prefix": "LAND_SMOOTH",
        "body": [
           "LAND_SMOOTH$0"
        ],
        "description": "LAND_SMOOTH"
    },
    "LINK_ALL_CHILDREN": {
        "prefix": "LINK_ALL_CHILDREN",
        "body": [
           "LINK_ALL_CHILDREN$0"
        ],
        "description": "refers to all children, (everything but the root)"
    },
    "LINK_ALL_OTHERS": {
        "prefix": "LINK_ALL_OTHERS",
        "body": [
           "LINK_ALL_OTHERS$0"
        ],
        "description": "refers to all other prims"
    },
    "LINK_ROOT": {
        "prefix": "LINK_ROOT",
        "body": [
           "LINK_ROOT$0"
        ],
        "description": "refers to the root prim in a multi-prim linked set"
    },
    "LINK_SET": {
        "prefix": "LINK_SET",
        "body": [
           "LINK_SET$0"
        ],
        "description": "refers to all prims"
    },
    "LINK_THIS": {
        "prefix": "LINK_THIS",
        "body": [
           "LINK_THIS$0"
        ],
        "description": "refers to the prim the script is in"
    },
    "LIST_STAT_GEOMETRIC_MEAN": {
        "prefix": "LIST_STAT_GEOMETRIC_MEAN",
        "body": [
           "LIST_STAT_GEOMETRIC_MEAN$0"
        ],
        "description": "LIST_STAT_GEOMETRIC_MEAN"
    },
    "LIST_STAT_MAX": {
        "prefix": "LIST_STAT_MAX",
        "body": [
           "LIST_STAT_MAX$0"
        ],
        "description": "LIST_STAT_MAX"
    },
    "LIST_STAT_MEAN": {
        "prefix": "LIST_STAT_MEAN",
        "body": [
           "LIST_STAT_MEAN$0"
        ],
        "description": "LIST_STAT_MEAN"
    },
    "LIST_STAT_MEDIAN": {
        "prefix": "LIST_STAT_MEDIAN",
        "body": [
           "LIST_STAT_MEDIAN$0"
        ],
        "description": "LIST_STAT_MEDIAN"
    },
    "LIST_STAT_MIN": {
        "prefix": "LIST_STAT_MIN",
        "body": [
           "LIST_STAT_MIN$0"
        ],
        "description": "LIST_STAT_MIN"
    },
    "LIST_STAT_NUM_COUNT": {
        "prefix": "LIST_STAT_NUM_COUNT",
        "body": [
           "LIST_STAT_NUM_COUNT$0"
        ],
        "description": "LIST_STAT_NUM_COUNT"
    },
    "LIST_STAT_RANGE": {
        "prefix": "LIST_STAT_RANGE",
        "body": [
           "LIST_STAT_RANGE$0"
        ],
        "description": "LIST_STAT_RANGE"
    },
    "LIST_STAT_STD_DEV": {
        "prefix": "LIST_STAT_STD_DEV",
        "body": [
           "LIST_STAT_STD_DEV$0"
        ],
        "description": "LIST_STAT_STD_DEV"
    },
    "LIST_STAT_SUM": {
        "prefix": "LIST_STAT_SUM",
        "body": [
           "LIST_STAT_SUM$0"
        ],
        "description": "LIST_STAT_SUM"
    },
    "LIST_STAT_SUM_SQUARES": {
        "prefix": "LIST_STAT_SUM_SQUARES",
        "body": [
           "LIST_STAT_SUM_SQUARES$0"
        ],
        "description": "LIST_STAT_SUM_SQUARES"
    },
    "LlGetGroup": {
        "prefix": "LlGetGroup",
        "body": [
           "LlGetGroup$0"
        ],
        "description": "LlGetGroup"
    },
    "LOOP": {
        "prefix": "LOOP",
        "body": [
           "LOOP$0"
        ],
        "description": "LOOP"
    },
    "MASK_BASE": {
        "prefix": "MASK_BASE",
        "body": [
           "MASK_BASE$0"
        ],
        "description": "The base permissions."
    },
    "MASK_EVERYONE": {
        "prefix": "MASK_EVERYONE",
        "body": [
           "MASK_EVERYONE$0"
        ],
        "description": "Permissions everyone has."
    },
    "MASK_GROUP": {
        "prefix": "MASK_GROUP",
        "body": [
           "MASK_GROUP$0"
        ],
        "description": "Active group permissions."
    },
    "MASK_NEXT": {
        "prefix": "MASK_NEXT",
        "body": [
           "MASK_NEXT$0"
        ],
        "description": "Permissions the next owner will have"
    },
    "MASK_OWNER": {
        "prefix": "MASK_OWNER",
        "body": [
           "MASK_OWNER$0"
        ],
        "description": "Current owner permissions."
    },
    "NULL_KEY": {
        "prefix": "NULL_KEY",
        "body": [
           "NULL_KEY$0"
        ],
        "description": "NULL_KEY"
    },
    "OBJECT_ATTACHED_POINT": {
        "prefix": "OBJECT_ATTACHED_POINT",
        "body": [
           "OBJECT_ATTACHED_POINT$0"
        ],
        "description": "OBJECT_ATTACHED_POINT"
    },
    "OBJECT_ATTACHED_SLOTS_AVAILABLE": {
        "prefix": "OBJECT_ATTACHED_SLOTS_AVAILABLE",
        "body": [
           "OBJECT_ATTACHED_SLOTS_AVAILABLE$0"
        ],
        "description": "OBJECT_ATTACHED_SLOTS_AVAILABLE"
    },
    "OBJECT_BODY_SHAPE_TYPE": {
        "prefix": "OBJECT_BODY_SHAPE_TYPE",
        "body": [
           "OBJECT_BODY_SHAPE_TYPE$0"
        ],
        "description": "OBJECT_BODY_SHAPE_TYPE"
    },
    "OBJECT_CHARACTER_TIME": {
        "prefix": "OBJECT_CHARACTER_TIME",
        "body": [
           "OBJECT_CHARACTER_TIME$0"
        ],
        "description": "OBJECT_CHARACTER_TIME"
    },
    "OBJECT_CLICK_ACTION": {
        "prefix": "OBJECT_CLICK_ACTION",
        "body": [
           "OBJECT_CLICK_ACTION$0"
        ],
        "description": "OBJECT_CLICK_ACTION"
    },
    "OBJECT_CREATOR": {
        "prefix": "OBJECT_CREATOR",
        "body": [
           "OBJECT_CREATOR$0"
        ],
        "description": "OBJECT_CREATOR"
    },
    "OBJECT_DESC": {
        "prefix": "OBJECT_DESC",
        "body": [
           "OBJECT_DESC$0"
        ],
        "description": "OBJECT_DESC"
    },
    "OBJECT_GROUP": {
        "prefix": "OBJECT_GROUP",
        "body": [
           "OBJECT_GROUP$0"
        ],
        "description": "OBJECT_GROUP"
    },
    "OBJECT_HOVER_HEIGHT": {
        "prefix": "OBJECT_HOVER_HEIGHT",
        "body": [
           "OBJECT_HOVER_HEIGHT$0"
        ],
        "description": "OBJECT_HOVER_HEIGHT"
    },
    "OBJECT_LAST_OWNER_ID": {
        "prefix": "OBJECT_LAST_OWNER_ID",
        "body": [
           "OBJECT_LAST_OWNER_ID$0"
        ],
        "description": "OBJECT_LAST_OWNER_ID"
    },
    "OBJECT_NAME": {
        "prefix": "OBJECT_NAME",
        "body": [
           "OBJECT_NAME$0"
        ],
        "description": "OBJECT_NAME"
    },
    "OBJECT_OMEGA": {
        "prefix": "OBJECT_OMEGA",
        "body": [
           "OBJECT_OMEGA$0"
        ],
        "description": "OBJECT_OMEGA"
    },
    "OBJECT_OWNER": {
        "prefix": "OBJECT_OWNER",
        "body": [
           "OBJECT_OWNER$0"
        ],
        "description": "OBJECT_OWNER"
    },
    "OBJECT_PATHFINDING_TYPE": {
        "prefix": "OBJECT_PATHFINDING_TYPE",
        "body": [
           "OBJECT_PATHFINDING_TYPE$0"
        ],
        "description": "OBJECT_PATHFINDING_TYPE"
    },
    "OBJECT_PHANTOM": {
        "prefix": "OBJECT_PHANTOM",
        "body": [
           "OBJECT_PHANTOM$0"
        ],
        "description": "OBJECT_PHANTOM"
    },
    "OBJECT_PHYSICS": {
        "prefix": "OBJECT_PHYSICS",
        "body": [
           "OBJECT_PHYSICS$0"
        ],
        "description": "OBJECT_PHYSICS"
    },
    "OBJECT_PHYSICS_COST": {
        "prefix": "OBJECT_PHYSICS_COST",
        "body": [
           "OBJECT_PHYSICS_COST$0"
        ],
        "description": "OBJECT_PHYSICS_COST"
    },
    "OBJECT_POS": {
        "prefix": "OBJECT_POS",
        "body": [
           "OBJECT_POS$0"
        ],
        "description": "OBJECT_POS"
    },
    "OBJECT_PRIM_COUNT": {
        "prefix": "OBJECT_PRIM_COUNT",
        "body": [
           "OBJECT_PRIM_COUNT$0"
        ],
        "description": "OBJECT_PRIM_COUNT"
    },
    "OBJECT_PRIM_EQUIVALENCE": {
        "prefix": "OBJECT_PRIM_EQUIVALENCE",
        "body": [
           "OBJECT_PRIM_EQUIVALENCE$0"
        ],
        "description": "OBJECT_PRIM_EQUIVALENCE"
    },
    "OBJECT_RENDER_WEIGHT": {
        "prefix": "OBJECT_RENDER_WEIGHT",
        "body": [
           "OBJECT_RENDER_WEIGHT$0"
        ],
        "description": "OBJECT_RENDER_WEIGHT"
    },
    "OBJECT_RETURN_PARCEL": {
        "prefix": "OBJECT_RETURN_PARCEL",
        "body": [
           "OBJECT_RETURN_PARCEL$0"
        ],
        "description": "Return all objects on the same parcel as the script which are owned by owner.\nThe script must be owned by an estate manager or over a parcel owned by the owner of the script."
    },
    "OBJECT_RETURN_PARCEL_OWNER": {
        "prefix": "OBJECT_RETURN_PARCEL_OWNER",
        "body": [
           "OBJECT_RETURN_PARCEL_OWNER$0"
        ],
        "description": "Return all objects owned by owner which are over parcels owned by the owner of the script."
    },
    "OBJECT_RETURN_REGION": {
        "prefix": "OBJECT_RETURN_REGION",
        "body": [
           "OBJECT_RETURN_REGION$0"
        ],
        "description": "Return all objects in the region owned by owner.\nThe script must be owned by the estate owner or an estate manager."
    },
    "OBJECT_ROOT": {
        "prefix": "OBJECT_ROOT",
        "body": [
           "OBJECT_ROOT$0"
        ],
        "description": "OBJECT_ROOT"
    },
    "OBJECT_ROT": {
        "prefix": "OBJECT_ROT",
        "body": [
           "OBJECT_ROT$0"
        ],
        "description": "OBJECT_ROT"
    },
    "OBJECT_RUNNING_SCRIPT_COUNT": {
        "prefix": "OBJECT_RUNNING_SCRIPT_COUNT",
        "body": [
           "OBJECT_RUNNING_SCRIPT_COUNT$0"
        ],
        "description": "OBJECT_RUNNING_SCRIPT_COUNT"
    },
    "OBJECT_SCRIPT_MEMORY": {
        "prefix": "OBJECT_SCRIPT_MEMORY",
        "body": [
           "OBJECT_SCRIPT_MEMORY$0"
        ],
        "description": "OBJECT_SCRIPT_MEMORY"
    },
    "OBJECT_SCRIPT_TIME": {
        "prefix": "OBJECT_SCRIPT_TIME",
        "body": [
           "OBJECT_SCRIPT_TIME$0"
        ],
        "description": "OBJECT_SCRIPT_TIME"
    },
    "OBJECT_SELECT_COUNT": {
        "prefix": "OBJECT_SELECT_COUNT",
        "body": [
           "OBJECT_SELECT_COUNT$0"
        ],
        "description": "OBJECT_SELECT_COUNT"
    },
    "OBJECT_SERVER_COST": {
        "prefix": "OBJECT_SERVER_COST",
        "body": [
           "OBJECT_SERVER_COST$0"
        ],
        "description": "OBJECT_SERVER_COST"
    },
    "OBJECT_STREAMING_COST": {
        "prefix": "OBJECT_STREAMING_COST",
        "body": [
           "OBJECT_STREAMING_COST$0"
        ],
        "description": "OBJECT_STREAMING_COST"
    },
    "OBJECT_TEMP_ON_REZ": {
        "prefix": "OBJECT_TEMP_ON_REZ",
        "body": [
           "OBJECT_TEMP_ON_REZ$0"
        ],
        "description": "OBJECT_TEMP_ON_REZ"
    },
    "OBJECT_TOTAL_INVENTORY_COUNT": {
        "prefix": "OBJECT_TOTAL_INVENTORY_COUNT",
        "body": [
           "OBJECT_TOTAL_INVENTORY_COUNT$0"
        ],
        "description": "OBJECT_TOTAL_INVENTORY_COUNT"
    },
    "OBJECT_TOTAL_SCRIPT_COUNT": {
        "prefix": "OBJECT_TOTAL_SCRIPT_COUNT",
        "body": [
           "OBJECT_TOTAL_SCRIPT_COUNT$0"
        ],
        "description": "OBJECT_TOTAL_SCRIPT_COUNT"
    },
    "OBJECT_UNKNOWN_DETAIL": {
        "prefix": "OBJECT_UNKNOWN_DETAIL",
        "body": [
           "OBJECT_UNKNOWN_DETAIL$0"
        ],
        "description": "OBJECT_UNKNOWN_DETAIL"
    },
    "OBJECT_VELOCITY": {
        "prefix": "OBJECT_VELOCITY",
        "body": [
           "OBJECT_VELOCITY$0"
        ],
        "description": "OBJECT_VELOCITY"
    },
    "OPT_CHARACTER": {
        "prefix": "OPT_CHARACTER",
        "body": [
           "OPT_CHARACTER$0"
        ],
        "description": "OPT_CHARACTER"
    },
    "OPT_AVATAR": {
        "prefix": "OPT_AVATAR",
        "body": [
           "OPT_AVATAR$0"
        ],
        "description": "OPT_AVATAR"
    },
    "OPT_EXCLUSION_VOLUME": {
        "prefix": "OPT_EXCLUSION_VOLUME",
        "body": [
           "OPT_EXCLUSION_VOLUME$0"
        ],
        "description": "OPT_EXCLUSION_VOLUME"
    },
    "OPT_LEGACY_LINKSET": {
        "prefix": "OPT_LEGACY_LINKSET",
        "body": [
           "OPT_LEGACY_LINKSET$0"
        ],
        "description": "OPT_LEGACY_LINKSET"
    },
    "OPT_MATERIAL_VOLUME": {
        "prefix": "OPT_MATERIAL_VOLUME",
        "body": [
           "OPT_MATERIAL_VOLUME$0"
        ],
        "description": "OPT_MATERIAL_VOLUME"
    },
    "OPT_OTHER": {
        "prefix": "OPT_OTHER",
        "body": [
           "OPT_OTHER$0"
        ],
        "description": "OPT_OTHER"
    },
    "OPT_STATIC_OBSTACLE": {
        "prefix": "OPT_STATIC_OBSTACLE",
        "body": [
           "OPT_STATIC_OBSTACLE$0"
        ],
        "description": "OPT_STATIC_OBSTACLE"
    },
    "OPT_WALKABLE": {
        "prefix": "OPT_WALKABLE",
        "body": [
           "OPT_WALKABLE$0"
        ],
        "description": "OPT_WALKABLE"
    },
    "PARCEL_COUNT_GROUP": {
        "prefix": "PARCEL_COUNT_GROUP",
        "body": [
           "PARCEL_COUNT_GROUP$0"
        ],
        "description": "PARCEL_COUNT_GROUP"
    },
    "PARCEL_COUNT_OTHER": {
        "prefix": "PARCEL_COUNT_OTHER",
        "body": [
           "PARCEL_COUNT_OTHER$0"
        ],
        "description": "PARCEL_COUNT_OTHER"
    },
    "PARCEL_COUNT_OWNER": {
        "prefix": "PARCEL_COUNT_OWNER",
        "body": [
           "PARCEL_COUNT_OWNER$0"
        ],
        "description": "PARCEL_COUNT_OWNER"
    },
    "PARCEL_COUNT_SELECTED": {
        "prefix": "PARCEL_COUNT_SELECTED",
        "body": [
           "PARCEL_COUNT_SELECTED$0"
        ],
        "description": "PARCEL_COUNT_SELECTED"
    },
    "PARCEL_COUNT_TEMP": {
        "prefix": "PARCEL_COUNT_TEMP",
        "body": [
           "PARCEL_COUNT_TEMP$0"
        ],
        "description": "PARCEL_COUNT_TEMP"
    },
    "PARCEL_COUNT_TOTAL": {
        "prefix": "PARCEL_COUNT_TOTAL",
        "body": [
           "PARCEL_COUNT_TOTAL$0"
        ],
        "description": "PARCEL_COUNT_TOTAL"
    },
    "PARCEL_DETAILS_AREA": {
        "prefix": "PARCEL_DETAILS_AREA",
        "body": [
           "PARCEL_DETAILS_AREA$0"
        ],
        "description": "PARCEL_DETAILS_AREA"
    },
    "PARCEL_DETAILS_DESC": {
        "prefix": "PARCEL_DETAILS_DESC",
        "body": [
           "PARCEL_DETAILS_DESC$0"
        ],
        "description": "PARCEL_DETAILS_DESC"
    },
    "PARCEL_DETAILS_GROUP": {
        "prefix": "PARCEL_DETAILS_GROUP",
        "body": [
           "PARCEL_DETAILS_GROUP$0"
        ],
        "description": "PARCEL_DETAILS_GROUP"
    },
    "PARCEL_DETAILS_ID": {
        "prefix": "PARCEL_DETAILS_ID",
        "body": [
           "PARCEL_DETAILS_ID$0"
        ],
        "description": "PARCEL_DETAILS_ID"
    },
    "PARCEL_DETAILS_NAME": {
        "prefix": "PARCEL_DETAILS_NAME",
        "body": [
           "PARCEL_DETAILS_NAME$0"
        ],
        "description": "PARCEL_DETAILS_NAME"
    },
    "PARCEL_DETAILS_OWNER": {
        "prefix": "PARCEL_DETAILS_OWNER",
        "body": [
           "PARCEL_DETAILS_OWNER$0"
        ],
        "description": "PARCEL_DETAILS_OWNER"
    },
    "PARCEL_DETAILS_SEE_AVATARS": {
        "prefix": "PARCEL_DETAILS_SEE_AVATARS",
        "body": [
           "PARCEL_DETAILS_SEE_AVATARS$0"
        ],
        "description": "PARCEL_DETAILS_SEE_AVATARS"
    },
    "PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY": {
        "prefix": "PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY",
        "body": [
           "PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY$0"
        ],
        "description": "PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY"
    },
    "PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS": {
        "prefix": "PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS",
        "body": [
           "PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS$0"
        ],
        "description": "PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS"
    },
    "PARCEL_FLAG_ALLOW_CREATE_OBJECTS": {
        "prefix": "PARCEL_FLAG_ALLOW_CREATE_OBJECTS",
        "body": [
           "PARCEL_FLAG_ALLOW_CREATE_OBJECTS$0"
        ],
        "description": "PARCEL_FLAG_ALLOW_CREATE_OBJECTS"
    },
    "PARCEL_FLAG_ALLOW_DAMAGE": {
        "prefix": "PARCEL_FLAG_ALLOW_DAMAGE",
        "body": [
           "PARCEL_FLAG_ALLOW_DAMAGE$0"
        ],
        "description": "PARCEL_FLAG_ALLOW_DAMAGE"
    },
    "PARCEL_FLAG_ALLOW_FLY": {
        "prefix": "PARCEL_FLAG_ALLOW_FLY",
        "body": [
           "PARCEL_FLAG_ALLOW_FLY$0"
        ],
        "description": "PARCEL_FLAG_ALLOW_FLY"
    },
    "PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY": {
        "prefix": "PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY",
        "body": [
           "PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY$0"
        ],
        "description": "PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY"
    },
    "PARCEL_FLAG_ALLOW_GROUP_SCRIPTS": {
        "prefix": "PARCEL_FLAG_ALLOW_GROUP_SCRIPTS",
        "body": [
           "PARCEL_FLAG_ALLOW_GROUP_SCRIPTS$0"
        ],
        "description": "PARCEL_FLAG_ALLOW_GROUP_SCRIPTS"
    },
    "PARCEL_FLAG_ALLOW_LANDMARK": {
        "prefix": "PARCEL_FLAG_ALLOW_LANDMARK",
        "body": [
           "PARCEL_FLAG_ALLOW_LANDMARK$0"
        ],
        "description": "PARCEL_FLAG_ALLOW_LANDMARK"
    },
    "PARCEL_FLAG_ALLOW_SCRIPTS": {
        "prefix": "PARCEL_FLAG_ALLOW_SCRIPTS",
        "body": [
           "PARCEL_FLAG_ALLOW_SCRIPTS$0"
        ],
        "description": "PARCEL_FLAG_ALLOW_SCRIPTS"
    },
    "PARCEL_FLAG_ALLOW_TERRAFORM": {
        "prefix": "PARCEL_FLAG_ALLOW_TERRAFORM",
        "body": [
           "PARCEL_FLAG_ALLOW_TERRAFORM$0"
        ],
        "description": "PARCEL_FLAG_ALLOW_TERRAFORM"
    },
    "PARCEL_FLAG_LOCAL_SOUND_ONLY": {
        "prefix": "PARCEL_FLAG_LOCAL_SOUND_ONLY",
        "body": [
           "PARCEL_FLAG_LOCAL_SOUND_ONLY$0"
        ],
        "description": "PARCEL_FLAG_LOCAL_SOUND_ONLY"
    },
    "PARCEL_FLAG_RESTRICT_PUSHOBJECT": {
        "prefix": "PARCEL_FLAG_RESTRICT_PUSHOBJECT",
        "body": [
           "PARCEL_FLAG_RESTRICT_PUSHOBJECT$0"
        ],
        "description": "PARCEL_FLAG_RESTRICT_PUSHOBJECT"
    },
    "PARCEL_FLAG_USE_ACCESS_GROUP": {
        "prefix": "PARCEL_FLAG_USE_ACCESS_GROUP",
        "body": [
           "PARCEL_FLAG_USE_ACCESS_GROUP$0"
        ],
        "description": "PARCEL_FLAG_USE_ACCESS_GROUP"
    },
    "PARCEL_FLAG_USE_ACCESS_LIST": {
        "prefix": "PARCEL_FLAG_USE_ACCESS_LIST",
        "body": [
           "PARCEL_FLAG_USE_ACCESS_LIST$0"
        ],
        "description": "PARCEL_FLAG_USE_ACCESS_LIST"
    },
    "PARCEL_FLAG_USE_BAN_LIST": {
        "prefix": "PARCEL_FLAG_USE_BAN_LIST",
        "body": [
           "PARCEL_FLAG_USE_BAN_LIST$0"
        ],
        "description": "PARCEL_FLAG_USE_BAN_LIST"
    },
    "PARCEL_FLAG_USE_LAND_PASS_LIST": {
        "prefix": "PARCEL_FLAG_USE_LAND_PASS_LIST",
        "body": [
           "PARCEL_FLAG_USE_LAND_PASS_LIST$0"
        ],
        "description": "PARCEL_FLAG_USE_LAND_PASS_LIST"
    },
    "PARCEL_MEDIA_COMMAND_AGENT": {
        "prefix": "PARCEL_MEDIA_COMMAND_AGENT",
        "body": [
           "PARCEL_MEDIA_COMMAND_AGENT$0"
        ],
        "description": "PARCEL_MEDIA_COMMAND_AGENT"
    },
    "PARCEL_MEDIA_COMMAND_AUTO_ALIGN": {
        "prefix": "PARCEL_MEDIA_COMMAND_AUTO_ALIGN",
        "body": [
           "PARCEL_MEDIA_COMMAND_AUTO_ALIGN$0"
        ],
        "description": "PARCEL_MEDIA_COMMAND_AUTO_ALIGN"
    },
    "PARCEL_MEDIA_COMMAND_DESC": {
        "prefix": "PARCEL_MEDIA_COMMAND_DESC",
        "body": [
           "PARCEL_MEDIA_COMMAND_DESC$0"
        ],
        "description": "PARCEL_MEDIA_COMMAND_DESC"
    },
    "PARCEL_MEDIA_COMMAND_LOOP": {
        "prefix": "PARCEL_MEDIA_COMMAND_LOOP",
        "body": [
           "PARCEL_MEDIA_COMMAND_LOOP$0"
        ],
        "description": "PARCEL_MEDIA_COMMAND_LOOP"
    },
    "PARCEL_MEDIA_COMMAND_LOOP_SET": {
        "prefix": "PARCEL_MEDIA_COMMAND_LOOP_SET",
        "body": [
           "PARCEL_MEDIA_COMMAND_LOOP_SET$0"
        ],
        "description": "PARCEL_MEDIA_COMMAND_LOOP_SET"
    },
    "PARCEL_MEDIA_COMMAND_PAUSE": {
        "prefix": "PARCEL_MEDIA_COMMAND_PAUSE",
        "body": [
           "PARCEL_MEDIA_COMMAND_PAUSE$0"
        ],
        "description": "PARCEL_MEDIA_COMMAND_PAUSE"
    },
    "PARCEL_MEDIA_COMMAND_PLAY": {
        "prefix": "PARCEL_MEDIA_COMMAND_PLAY",
        "body": [
           "PARCEL_MEDIA_COMMAND_PLAY$0"
        ],
        "description": "PARCEL_MEDIA_COMMAND_PLAY"
    },
    "PARCEL_MEDIA_COMMAND_SIZE": {
        "prefix": "PARCEL_MEDIA_COMMAND_SIZE",
        "body": [
           "PARCEL_MEDIA_COMMAND_SIZE$0"
        ],
        "description": "PARCEL_MEDIA_COMMAND_SIZE"
    },
    "PARCEL_MEDIA_COMMAND_STOP": {
        "prefix": "PARCEL_MEDIA_COMMAND_STOP",
        "body": [
           "PARCEL_MEDIA_COMMAND_STOP$0"
        ],
        "description": "PARCEL_MEDIA_COMMAND_STOP"
    },
    "PARCEL_MEDIA_COMMAND_TEXTURE": {
        "prefix": "PARCEL_MEDIA_COMMAND_TEXTURE",
        "body": [
           "PARCEL_MEDIA_COMMAND_TEXTURE$0"
        ],
        "description": "PARCEL_MEDIA_COMMAND_TEXTURE"
    },
    "PARCEL_MEDIA_COMMAND_TIME": {
        "prefix": "PARCEL_MEDIA_COMMAND_TIME",
        "body": [
           "PARCEL_MEDIA_COMMAND_TIME$0"
        ],
        "description": "PARCEL_MEDIA_COMMAND_TIME"
    },
    "PARCEL_MEDIA_COMMAND_TYPE": {
        "prefix": "PARCEL_MEDIA_COMMAND_TYPE",
        "body": [
           "PARCEL_MEDIA_COMMAND_TYPE$0"
        ],
        "description": "PARCEL_MEDIA_COMMAND_TYPE"
    },
    "PARCEL_MEDIA_COMMAND_UNLOAD": {
        "prefix": "PARCEL_MEDIA_COMMAND_UNLOAD",
        "body": [
           "PARCEL_MEDIA_COMMAND_UNLOAD$0"
        ],
        "description": "PARCEL_MEDIA_COMMAND_UNLOAD"
    },
    "PARCEL_MEDIA_COMMAND_URL": {
        "prefix": "PARCEL_MEDIA_COMMAND_URL",
        "body": [
           "PARCEL_MEDIA_COMMAND_URL$0"
        ],
        "description": "PARCEL_MEDIA_COMMAND_URL"
    },
    "PASSIVE": {
        "prefix": "PASSIVE",
        "body": [
           "PASSIVE$0"
        ],
        "description": "PASSIVE"
    },
    "PASS_ALWAYS": {
        "prefix": "PASS_ALWAYS",
        "body": [
           "PASS_ALWAYS$0"
        ],
        "description": "PASS_ALWAYS"
    },
    "PASS_IF_NOT_HANDLED": {
        "prefix": "PASS_IF_NOT_HANDLED",
        "body": [
           "PASS_IF_NOT_HANDLED$0"
        ],
        "description": "PASS_IF_NOT_HANDLED"
    },
    "PASS_NEVER": {
        "prefix": "PASS_NEVER",
        "body": [
           "PASS_NEVER$0"
        ],
        "description": "PASS_NEVER"
    },
    "PATROL_PAUSE_AT_WAYPOINTS": {
        "prefix": "PATROL_PAUSE_AT_WAYPOINTS",
        "body": [
           "PATROL_PAUSE_AT_WAYPOINTS$0"
        ],
        "description": "Whether the character should pause briefly after reaching each patrol point.\n- Parameters: [ integer boolean ]\n- Default: [ FALSE ]"
    },
    "PAYMENT_INFO_ON_FILE": {
        "prefix": "PAYMENT_INFO_ON_FILE",
        "body": [
           "PAYMENT_INFO_ON_FILE$0"
        ],
        "description": "PAYMENT_INFO_ON_FILE"
    },
    "PAYMENT_INFO_USED": {
        "prefix": "PAYMENT_INFO_USED",
        "body": [
           "PAYMENT_INFO_USED$0"
        ],
        "description": "PAYMENT_INFO_USED"
    },
    "PAY_DEFAULT": {
        "prefix": "PAY_DEFAULT",
        "body": [
           "PAY_DEFAULT$0"
        ],
        "description": "PAY_DEFAULT"
    },
    "PAY_HIDE": {
        "prefix": "PAY_HIDE",
        "body": [
           "PAY_HIDE$0"
        ],
        "description": "PAY_HIDE"
    },
    "PERMISSION_ATTACH": {
        "prefix": "PERMISSION_ATTACH",
        "body": [
           "PERMISSION_ATTACH$0"
        ],
        "description": "attach/detach from agent"
    },
    "PERMISSION_CHANGE_LINKS": {
        "prefix": "PERMISSION_CHANGE_LINKS",
        "body": [
           "PERMISSION_CHANGE_LINKS$0"
        ],
        "description": "change links"
    },
    "PERMISSION_CONTROL_CAMERA": {
        "prefix": "PERMISSION_CONTROL_CAMERA",
        "body": [
           "PERMISSION_CONTROL_CAMERA$0"
        ],
        "description": "control the agent's camera (must be sat on or attached; automatically revoked on stand or detach)"
    },
    "PERMISSION_DEBIT": {
        "prefix": "PERMISSION_DEBIT",
        "body": [
           "PERMISSION_DEBIT$0"
        ],
        "description": "take money from agent's account"
    },
    "PERMISSION_OVERRIDE_ANIMATIONS": {
        "prefix": "PERMISSION_OVERRIDE_ANIMATIONS",
        "body": [
           "PERMISSION_OVERRIDE_ANIMATIONS$0"
        ],
        "description": "configure the overriding of default animations on agent"
    },
    "PERMISSION_RETURN_OBJECTS": {
        "prefix": "PERMISSION_RETURN_OBJECTS",
        "body": [
           "PERMISSION_RETURN_OBJECTS$0"
        ],
        "description": "Used by llReturnObjectsByOwner and llReturnObjectsByID to return objects from parcels"
    },
    "PERMISSION_SILENT_ESTATE_MANAGEMENT": {
        "prefix": "PERMISSION_SILENT_ESTATE_MANAGEMENT",
        "body": [
           "PERMISSION_SILENT_ESTATE_MANAGEMENT$0"
        ],
        "description": "manage estate access without notifying the owner of changes"
    },
    "PERMISSION_TAKE_CONTROLS": {
        "prefix": "PERMISSION_TAKE_CONTROLS",
        "body": [
           "PERMISSION_TAKE_CONTROLS$0"
        ],
        "description": "take agent's controls"
    },
    "PERMISSION_TELEPORT": {
        "prefix": "PERMISSION_TELEPORT",
        "body": [
           "PERMISSION_TELEPORT$0"
        ],
        "description": "teleport the agent"
    },
    "PERMISSION_TRACK_CAMERA": {
        "prefix": "PERMISSION_TRACK_CAMERA",
        "body": [
           "PERMISSION_TRACK_CAMERA$0"
        ],
        "description": "track the agent's camera position and rotation"
    },
    "PERMISSION_TRIGGER_ANIMATION": {
        "prefix": "PERMISSION_TRIGGER_ANIMATION",
        "body": [
           "PERMISSION_TRIGGER_ANIMATION$0"
        ],
        "description": "start or stop Animations on agent"
    },
    "PERM_ALL": {
        "prefix": "PERM_ALL",
        "body": [
           "PERM_ALL$0"
        ],
        "description": "Move/Modify/Copy/Transfer permissions"
    },
    "PERM_COPY": {
        "prefix": "PERM_COPY",
        "body": [
           "PERM_COPY$0"
        ],
        "description": "Copy permission"
    },
    "PERM_MODIFY": {
        "prefix": "PERM_MODIFY",
        "body": [
           "PERM_MODIFY$0"
        ],
        "description": "Modify permission"
    },
    "PERM_MOVE": {
        "prefix": "PERM_MOVE",
        "body": [
           "PERM_MOVE$0"
        ],
        "description": "Move permission"
    },
    "PERM_TRANSFER": {
        "prefix": "PERM_TRANSFER",
        "body": [
           "PERM_TRANSFER$0"
        ],
        "description": "Transfer permission"
    },
    "PI": {
        "prefix": "PI",
        "body": [
           "PI$0"
        ],
        "description": "PI"
    },
    "PING_PONG": {
        "prefix": "PING_PONG",
        "body": [
           "PING_PONG$0"
        ],
        "description": "PING_PONG"
    },
    "PI_BY_TWO": {
        "prefix": "PI_BY_TWO",
        "body": [
           "PI_BY_TWO$0"
        ],
        "description": "PI_BY_TWO"
    },
    "PRIM_ALLOW_UNSIT": {
        "prefix": "PRIM_ALLOW_UNSIT",
        "body": [
           "PRIM_ALLOW_UNSIT$0"
        ],
        "description": "PRIM_ALLOW_UNSIT"
    },
    "PRIM_ALPHA_MODE": {
        "prefix": "PRIM_ALPHA_MODE",
        "body": [
           "PRIM_ALPHA_MODE$0"
        ],
        "description": "PRIM_ALPHA_MODE"
    },
    "PRIM_ALPHA_MODE_BLEND": {
        "prefix": "PRIM_ALPHA_MODE_BLEND",
        "body": [
           "PRIM_ALPHA_MODE_BLEND$0"
        ],
        "description": "PRIM_ALPHA_MODE_BLEND"
    },
    "PRIM_ALPHA_MODE_EMISSIVE": {
        "prefix": "PRIM_ALPHA_MODE_EMISSIVE",
        "body": [
           "PRIM_ALPHA_MODE_EMISSIVE$0"
        ],
        "description": "PRIM_ALPHA_MODE_EMISSIVE"
    },
    "PRIM_ALPHA_MODE_MASK": {
        "prefix": "PRIM_ALPHA_MODE_MASK",
        "body": [
           "PRIM_ALPHA_MODE_MASK$0"
        ],
        "description": "PRIM_ALPHA_MODE_MASK"
    },
    "PRIM_ALPHA_MODE_NONE": {
        "prefix": "PRIM_ALPHA_MODE_NONE",
        "body": [
           "PRIM_ALPHA_MODE_NONE$0"
        ],
        "description": "PRIM_ALPHA_MODE_NONE"
    },
    "PRIM_BUMP_BARK": {
        "prefix": "PRIM_BUMP_BARK",
        "body": [
           "PRIM_BUMP_BARK$0"
        ],
        "description": "PRIM_BUMP_BARK"
    },
    "PRIM_BUMP_BLOBS": {
        "prefix": "PRIM_BUMP_BLOBS",
        "body": [
           "PRIM_BUMP_BLOBS$0"
        ],
        "description": "PRIM_BUMP_BLOBS"
    },
    "PRIM_BUMP_BRICKS": {
        "prefix": "PRIM_BUMP_BRICKS",
        "body": [
           "PRIM_BUMP_BRICKS$0"
        ],
        "description": "PRIM_BUMP_BRICKS"
    },
    "PRIM_BUMP_BRIGHT": {
        "prefix": "PRIM_BUMP_BRIGHT",
        "body": [
           "PRIM_BUMP_BRIGHT$0"
        ],
        "description": "PRIM_BUMP_BRIGHT"
    },
    "PRIM_BUMP_CHECKER": {
        "prefix": "PRIM_BUMP_CHECKER",
        "body": [
           "PRIM_BUMP_CHECKER$0"
        ],
        "description": "PRIM_BUMP_CHECKER"
    },
    "PRIM_BUMP_CONCRETE": {
        "prefix": "PRIM_BUMP_CONCRETE",
        "body": [
           "PRIM_BUMP_CONCRETE$0"
        ],
        "description": "PRIM_BUMP_CONCRETE"
    },
    "PRIM_BUMP_DARK": {
        "prefix": "PRIM_BUMP_DARK",
        "body": [
           "PRIM_BUMP_DARK$0"
        ],
        "description": "PRIM_BUMP_DARK"
    },
    "PRIM_BUMP_DISKS": {
        "prefix": "PRIM_BUMP_DISKS",
        "body": [
           "PRIM_BUMP_DISKS$0"
        ],
        "description": "PRIM_BUMP_DISKS"
    },
    "PRIM_BUMP_GRAVEL": {
        "prefix": "PRIM_BUMP_GRAVEL",
        "body": [
           "PRIM_BUMP_GRAVEL$0"
        ],
        "description": "PRIM_BUMP_GRAVEL"
    },
    "PRIM_BUMP_LARGETILE": {
        "prefix": "PRIM_BUMP_LARGETILE",
        "body": [
           "PRIM_BUMP_LARGETILE$0"
        ],
        "description": "PRIM_BUMP_LARGETILE"
    },
    "PRIM_BUMP_NONE": {
        "prefix": "PRIM_BUMP_NONE",
        "body": [
           "PRIM_BUMP_NONE$0"
        ],
        "description": "PRIM_BUMP_NONE"
    },
    "PRIM_BUMP_SHINY": {
        "prefix": "PRIM_BUMP_SHINY",
        "body": [
           "PRIM_BUMP_SHINY$0"
        ],
        "description": "PRIM_BUMP_SHINY"
    },
    "PRIM_BUMP_SIDING": {
        "prefix": "PRIM_BUMP_SIDING",
        "body": [
           "PRIM_BUMP_SIDING$0"
        ],
        "description": "PRIM_BUMP_SIDING"
    },
    "PRIM_BUMP_STONE": {
        "prefix": "PRIM_BUMP_STONE",
        "body": [
           "PRIM_BUMP_STONE$0"
        ],
        "description": "PRIM_BUMP_STONE"
    },
    "PRIM_BUMP_STUCCO": {
        "prefix": "PRIM_BUMP_STUCCO",
        "body": [
           "PRIM_BUMP_STUCCO$0"
        ],
        "description": "PRIM_BUMP_STUCCO"
    },
    "PRIM_BUMP_SUCTION": {
        "prefix": "PRIM_BUMP_SUCTION",
        "body": [
           "PRIM_BUMP_SUCTION$0"
        ],
        "description": "PRIM_BUMP_SUCTION"
    },
    "PRIM_BUMP_TILE": {
        "prefix": "PRIM_BUMP_TILE",
        "body": [
           "PRIM_BUMP_TILE$0"
        ],
        "description": "PRIM_BUMP_TILE"
    },
    "PRIM_BUMP_WEAVE": {
        "prefix": "PRIM_BUMP_WEAVE",
        "body": [
           "PRIM_BUMP_WEAVE$0"
        ],
        "description": "PRIM_BUMP_WEAVE"
    },
    "PRIM_BUMP_WOOD": {
        "prefix": "PRIM_BUMP_WOOD",
        "body": [
           "PRIM_BUMP_WOOD$0"
        ],
        "description": "PRIM_BUMP_WOOD"
    },
    "PRIM_COLOR": {
        "prefix": "PRIM_COLOR",
        "body": [
           "PRIM_COLOR$0"
        ],
        "description": "PRIM_COLOR"
    },
    "PRIM_DESC": {
        "prefix": "PRIM_DESC",
        "body": [
           "PRIM_DESC$0"
        ],
        "description": "PRIM_DESC"
    },
    "PRIM_FLEXIBLE": {
        "prefix": "PRIM_FLEXIBLE",
        "body": [
           "PRIM_FLEXIBLE$0"
        ],
        "description": "PRIM_FLEXIBLE"
    },
    "PRIM_FULLBRIGHT": {
        "prefix": "PRIM_FULLBRIGHT",
        "body": [
           "PRIM_FULLBRIGHT$0"
        ],
        "description": "PRIM_FULLBRIGHT"
    },
    "PRIM_GLOW": {
        "prefix": "PRIM_GLOW",
        "body": [
           "PRIM_GLOW$0"
        ],
        "description": "PRIM_GLOW"
    },
    "PRIM_HOLE_CIRCLE": {
        "prefix": "PRIM_HOLE_CIRCLE",
        "body": [
           "PRIM_HOLE_CIRCLE$0"
        ],
        "description": "PRIM_HOLE_CIRCLE"
    },
    "PRIM_HOLE_DEFAULT": {
        "prefix": "PRIM_HOLE_DEFAULT",
        "body": [
           "PRIM_HOLE_DEFAULT$0"
        ],
        "description": "PRIM_HOLE_DEFAULT"
    },
    "PRIM_HOLE_SQUARE": {
        "prefix": "PRIM_HOLE_SQUARE",
        "body": [
           "PRIM_HOLE_SQUARE$0"
        ],
        "description": "PRIM_HOLE_SQUARE"
    },
    "PRIM_HOLE_TRIANGLE": {
        "prefix": "PRIM_HOLE_TRIANGLE",
        "body": [
           "PRIM_HOLE_TRIANGLE$0"
        ],
        "description": "PRIM_HOLE_TRIANGLE"
    },
    "PRIM_LINK_TARGET": {
        "prefix": "PRIM_LINK_TARGET",
        "body": [
           "PRIM_LINK_TARGET$0"
        ],
        "description": "PRIM_LINK_TARGET"
    },
    "PRIM_MATERIAL": {
        "prefix": "PRIM_MATERIAL",
        "body": [
           "PRIM_MATERIAL$0"
        ],
        "description": "PRIM_MATERIAL"
    },
    "PRIM_MATERIAL_FLESH": {
        "prefix": "PRIM_MATERIAL_FLESH",
        "body": [
           "PRIM_MATERIAL_FLESH$0"
        ],
        "description": "PRIM_MATERIAL_FLESH"
    },
    "PRIM_MATERIAL_GLASS": {
        "prefix": "PRIM_MATERIAL_GLASS",
        "body": [
           "PRIM_MATERIAL_GLASS$0"
        ],
        "description": "PRIM_MATERIAL_GLASS"
    },
    "PRIM_MATERIAL_LIGHT": {
        "prefix": "PRIM_MATERIAL_LIGHT",
        "body": [
           "PRIM_MATERIAL_LIGHT$0"
        ],
        "description": "PRIM_MATERIAL_LIGHT"
    },
    "PRIM_MATERIAL_METAL": {
        "prefix": "PRIM_MATERIAL_METAL",
        "body": [
           "PRIM_MATERIAL_METAL$0"
        ],
        "description": "PRIM_MATERIAL_METAL"
    },
    "PRIM_MATERIAL_PLASTIC": {
        "prefix": "PRIM_MATERIAL_PLASTIC",
        "body": [
           "PRIM_MATERIAL_PLASTIC$0"
        ],
        "description": "PRIM_MATERIAL_PLASTIC"
    },
    "PRIM_MATERIAL_RUBBER": {
        "prefix": "PRIM_MATERIAL_RUBBER",
        "body": [
           "PRIM_MATERIAL_RUBBER$0"
        ],
        "description": "PRIM_MATERIAL_RUBBER"
    },
    "PRIM_MATERIAL_STONE": {
        "prefix": "PRIM_MATERIAL_STONE",
        "body": [
           "PRIM_MATERIAL_STONE$0"
        ],
        "description": "PRIM_MATERIAL_STONE"
    },
    "PRIM_MATERIAL_WOOD": {
        "prefix": "PRIM_MATERIAL_WOOD",
        "body": [
           "PRIM_MATERIAL_WOOD$0"
        ],
        "description": "PRIM_MATERIAL_WOOD"
    },
    "PRIM_MEDIA_ALT_IMAGE_ENABLE": {
        "prefix": "PRIM_MEDIA_ALT_IMAGE_ENABLE",
        "body": [
           "PRIM_MEDIA_ALT_IMAGE_ENABLE$0"
        ],
        "description": "Sets the default image state (the image that the user sees before a piece of media is active) for the chosen face. The default image is specified by Second Life's server for that media type.\nNote: This flag is not currently implemented"
    },
    "PRIM_MEDIA_AUTO_LOOP": {
        "prefix": "PRIM_MEDIA_AUTO_LOOP",
        "body": [
           "PRIM_MEDIA_AUTO_LOOP$0"
        ],
        "description": "PRIM_MEDIA_AUTO_LOOP"
    },
    "PRIM_MEDIA_AUTO_PLAY": {
        "prefix": "PRIM_MEDIA_AUTO_PLAY",
        "body": [
           "PRIM_MEDIA_AUTO_PLAY$0"
        ],
        "description": "PRIM_MEDIA_AUTO_PLAY"
    },
    "PRIM_MEDIA_AUTO_SCALE": {
        "prefix": "PRIM_MEDIA_AUTO_SCALE",
        "body": [
           "PRIM_MEDIA_AUTO_SCALE$0"
        ],
        "description": "PRIM_MEDIA_AUTO_SCALE"
    },
    "PRIM_MEDIA_AUTO_ZOOM": {
        "prefix": "PRIM_MEDIA_AUTO_ZOOM",
        "body": [
           "PRIM_MEDIA_AUTO_ZOOM$0"
        ],
        "description": "PRIM_MEDIA_AUTO_ZOOM"
    },
    "PRIM_MEDIA_CURRENT_URL": {
        "prefix": "PRIM_MEDIA_CURRENT_URL",
        "body": [
           "PRIM_MEDIA_CURRENT_URL$0"
        ],
        "description": "PRIM_MEDIA_CURRENT_URL"
    },
    "PRIM_MEDIA_FIRST_CLICK_INTERACT": {
        "prefix": "PRIM_MEDIA_FIRST_CLICK_INTERACT",
        "body": [
           "PRIM_MEDIA_FIRST_CLICK_INTERACT$0"
        ],
        "description": "PRIM_MEDIA_FIRST_CLICK_INTERACT"
    },
    "PRIM_MEDIA_HEIGHT_PIXELS": {
        "prefix": "PRIM_MEDIA_HEIGHT_PIXELS",
        "body": [
           "PRIM_MEDIA_HEIGHT_PIXELS$0"
        ],
        "description": "PRIM_MEDIA_HEIGHT_PIXELS"
    },
    "PRIM_MEDIA_HOME_URL": {
        "prefix": "PRIM_MEDIA_HOME_URL",
        "body": [
           "PRIM_MEDIA_HOME_URL$0"
        ],
        "description": "PRIM_MEDIA_HOME_URL"
    },
    "PRIM_MEDIA_PERMS_CONTROL": {
        "prefix": "PRIM_MEDIA_PERMS_CONTROL",
        "body": [
           "PRIM_MEDIA_PERMS_CONTROL$0"
        ],
        "description": "PRIM_MEDIA_PERMS_CONTROL"
    },
    "PRIM_MEDIA_PERMS_INTERACT": {
        "prefix": "PRIM_MEDIA_PERMS_INTERACT",
        "body": [
           "PRIM_MEDIA_PERMS_INTERACT$0"
        ],
        "description": "PRIM_MEDIA_PERMS_INTERACT"
    },
    "PRIM_MEDIA_PERM_ANYONE": {
        "prefix": "PRIM_MEDIA_PERM_ANYONE",
        "body": [
           "PRIM_MEDIA_PERM_ANYONE$0"
        ],
        "description": "PRIM_MEDIA_PERM_ANYONE"
    },
    "PRIM_MEDIA_PERM_GROUP": {
        "prefix": "PRIM_MEDIA_PERM_GROUP",
        "body": [
           "PRIM_MEDIA_PERM_GROUP$0"
        ],
        "description": "PRIM_MEDIA_PERM_GROUP"
    },
    "PRIM_MEDIA_PERM_NONE": {
        "prefix": "PRIM_MEDIA_PERM_NONE",
        "body": [
           "PRIM_MEDIA_PERM_NONE$0"
        ],
        "description": "PRIM_MEDIA_PERM_NONE"
    },
    "PRIM_MEDIA_PERM_OWNER": {
        "prefix": "PRIM_MEDIA_PERM_OWNER",
        "body": [
           "PRIM_MEDIA_PERM_OWNER$0"
        ],
        "description": "PRIM_MEDIA_PERM_OWNER"
    },
    "PRIM_MEDIA_WHITELIST": {
        "prefix": "PRIM_MEDIA_WHITELIST",
        "body": [
           "PRIM_MEDIA_WHITELIST$0"
        ],
        "description": "PRIM_MEDIA_WHITELIST"
    },
    "PRIM_MEDIA_WHITELIST_ENABLE": {
        "prefix": "PRIM_MEDIA_WHITELIST_ENABLE",
        "body": [
           "PRIM_MEDIA_WHITELIST_ENABLE$0"
        ],
        "description": "PRIM_MEDIA_WHITELIST_ENABLE"
    },
    "PRIM_MEDIA_WIDTH_PIXELS": {
        "prefix": "PRIM_MEDIA_WIDTH_PIXELS",
        "body": [
           "PRIM_MEDIA_WIDTH_PIXELS$0"
        ],
        "description": "PRIM_MEDIA_WIDTH_PIXELS"
    },
    "PRIM_NAME": {
        "prefix": "PRIM_NAME",
        "body": [
           "PRIM_NAME$0"
        ],
        "description": "PRIM_NAME"
    },
    "PRIM_NORMAL": {
        "prefix": "PRIM_NORMAL",
        "body": [
           "PRIM_NORMAL$0"
        ],
        "description": "PRIM_NORMAL"
    },
    "PRIM_OMEGA": {
        "prefix": "PRIM_OMEGA",
        "body": [
           "PRIM_OMEGA$0"
        ],
        "description": "PRIM_OMEGA"
    },
    "PRIM_PHANTOM": {
        "prefix": "PRIM_PHANTOM",
        "body": [
           "PRIM_PHANTOM$0"
        ],
        "description": "PRIM_PHANTOM"
    },
    "PRIM_PHYSICS": {
        "prefix": "PRIM_PHYSICS",
        "body": [
           "PRIM_PHYSICS$0"
        ],
        "description": "PRIM_PHYSICS"
    },
    "PRIM_PHYSICS_SHAPE_CONVEX": {
        "prefix": "PRIM_PHYSICS_SHAPE_CONVEX",
        "body": [
           "PRIM_PHYSICS_SHAPE_CONVEX$0"
        ],
        "description": "PRIM_PHYSICS_SHAPE_CONVEX"
    },
    "PRIM_PHYSICS_SHAPE_NONE": {
        "prefix": "PRIM_PHYSICS_SHAPE_NONE",
        "body": [
           "PRIM_PHYSICS_SHAPE_NONE$0"
        ],
        "description": "PRIM_PHYSICS_SHAPE_NONE"
    },
    "PRIM_PHYSICS_SHAPE_PRIM": {
        "prefix": "PRIM_PHYSICS_SHAPE_PRIM",
        "body": [
           "PRIM_PHYSICS_SHAPE_PRIM$0"
        ],
        "description": "PRIM_PHYSICS_SHAPE_PRIM"
    },
    "PRIM_PHYSICS_SHAPE_TYPE": {
        "prefix": "PRIM_PHYSICS_SHAPE_TYPE",
        "body": [
           "PRIM_PHYSICS_SHAPE_TYPE$0"
        ],
        "description": "PRIM_PHYSICS_SHAPE_TYPE"
    },
    "PRIM_POINT_LIGHT": {
        "prefix": "PRIM_POINT_LIGHT",
        "body": [
           "PRIM_POINT_LIGHT$0"
        ],
        "description": "PRIM_POINT_LIGHT"
    },
    "PRIM_POSITION": {
        "prefix": "PRIM_POSITION",
        "body": [
           "PRIM_POSITION$0"
        ],
        "description": "PRIM_POSITION"
    },
    "PRIM_POS_LOCAL": {
        "prefix": "PRIM_POS_LOCAL",
        "body": [
           "PRIM_POS_LOCAL$0"
        ],
        "description": "PRIM_POS_LOCAL"
    },
    "PRIM_ROTATION": {
        "prefix": "PRIM_ROTATION",
        "body": [
           "PRIM_ROTATION$0"
        ],
        "description": "PRIM_ROTATION"
    },
    "PRIM_ROT_LOCAL": {
        "prefix": "PRIM_ROT_LOCAL",
        "body": [
           "PRIM_ROT_LOCAL$0"
        ],
        "description": "PRIM_ROT_LOCAL"
    },
    "PRIM_SCRIPTED_SIT_ONLY": {
        "prefix": "PRIM_SCRIPTED_SIT_ONLY",
        "body": [
           "PRIM_SCRIPTED_SIT_ONLY$0"
        ],
        "description": "PRIM_SCRIPTED_SIT_ONLY"
    },
    "PRIM_SCULPT_FLAG_INVERT": {
        "prefix": "PRIM_SCULPT_FLAG_INVERT",
        "body": [
           "PRIM_SCULPT_FLAG_INVERT$0"
        ],
        "description": "PRIM_SCULPT_FLAG_INVERT"
    },
    "PRIM_SCULPT_FLAG_MIRROR": {
        "prefix": "PRIM_SCULPT_FLAG_MIRROR",
        "body": [
           "PRIM_SCULPT_FLAG_MIRROR$0"
        ],
        "description": "PRIM_SCULPT_FLAG_MIRROR"
    },
    "PRIM_SCULPT_TYPE_CYLINDER": {
        "prefix": "PRIM_SCULPT_TYPE_CYLINDER",
        "body": [
           "PRIM_SCULPT_TYPE_CYLINDER$0"
        ],
        "description": "PRIM_SCULPT_TYPE_CYLINDER"
    },
    "PRIM_SCULPT_TYPE_MASK": {
        "prefix": "PRIM_SCULPT_TYPE_MASK",
        "body": [
           "PRIM_SCULPT_TYPE_MASK$0"
        ],
        "description": "PRIM_SCULPT_TYPE_MASK"
    },
    "PRIM_SCULPT_TYPE_PLANE": {
        "prefix": "PRIM_SCULPT_TYPE_PLANE",
        "body": [
           "PRIM_SCULPT_TYPE_PLANE$0"
        ],
        "description": "PRIM_SCULPT_TYPE_PLANE"
    },
    "PRIM_SCULPT_TYPE_SPHERE": {
        "prefix": "PRIM_SCULPT_TYPE_SPHERE",
        "body": [
           "PRIM_SCULPT_TYPE_SPHERE$0"
        ],
        "description": "PRIM_SCULPT_TYPE_SPHERE"
    },
    "PRIM_SCULPT_TYPE_TORUS": {
        "prefix": "PRIM_SCULPT_TYPE_TORUS",
        "body": [
           "PRIM_SCULPT_TYPE_TORUS$0"
        ],
        "description": "PRIM_SCULPT_TYPE_TORUS"
    },
    "PRIM_SHINY_HIGH": {
        "prefix": "PRIM_SHINY_HIGH",
        "body": [
           "PRIM_SHINY_HIGH$0"
        ],
        "description": "PRIM_SHINY_HIGH"
    },
    "PRIM_SHINY_LOW": {
        "prefix": "PRIM_SHINY_LOW",
        "body": [
           "PRIM_SHINY_LOW$0"
        ],
        "description": "PRIM_SHINY_LOW"
    },
    "PRIM_SHINY_MEDIUM": {
        "prefix": "PRIM_SHINY_MEDIUM",
        "body": [
           "PRIM_SHINY_MEDIUM$0"
        ],
        "description": "PRIM_SHINY_MEDIUM"
    },
    "PRIM_SHINY_NONE": {
        "prefix": "PRIM_SHINY_NONE",
        "body": [
           "PRIM_SHINY_NONE$0"
        ],
        "description": "PRIM_SHINY_NONE"
    },
    "PRIM_SIT_TARGET": {
        "prefix": "PRIM_SIT_TARGET",
        "body": [
           "PRIM_SIT_TARGET$0"
        ],
        "description": "PRIM_SIT_TARGET"
    },
    "PRIM_SIZE": {
        "prefix": "PRIM_SIZE",
        "body": [
           "PRIM_SIZE$0"
        ],
        "description": "PRIM_SIZE"
    },
    "PRIM_SLICE": {
        "prefix": "PRIM_SLICE",
        "body": [
           "PRIM_SLICE$0"
        ],
        "description": "PRIM_SLICE"
    },
    "PRIM_SPECULAR": {
        "prefix": "PRIM_SPECULAR",
        "body": [
           "PRIM_SPECULAR$0"
        ],
        "description": "PRIM_SPECULAR"
    },
    "PRIM_TEMP_ON_REZ": {
        "prefix": "PRIM_TEMP_ON_REZ",
        "body": [
           "PRIM_TEMP_ON_REZ$0"
        ],
        "description": "PRIM_TEMP_ON_REZ"
    },
    "PRIM_TEXGEN": {
        "prefix": "PRIM_TEXGEN",
        "body": [
           "PRIM_TEXGEN$0"
        ],
        "description": "PRIM_TEXGEN"
    },
    "PRIM_TEXGEN_DEFAULT": {
        "prefix": "PRIM_TEXGEN_DEFAULT",
        "body": [
           "PRIM_TEXGEN_DEFAULT$0"
        ],
        "description": "PRIM_TEXGEN_DEFAULT"
    },
    "PRIM_TEXGEN_PLANAR": {
        "prefix": "PRIM_TEXGEN_PLANAR",
        "body": [
           "PRIM_TEXGEN_PLANAR$0"
        ],
        "description": "PRIM_TEXGEN_PLANAR"
    },
    "PRIM_TEXT": {
        "prefix": "PRIM_TEXT",
        "body": [
           "PRIM_TEXT$0"
        ],
        "description": "PRIM_TEXT"
    },
    "PRIM_TEXTURE": {
        "prefix": "PRIM_TEXTURE",
        "body": [
           "PRIM_TEXTURE$0"
        ],
        "description": "PRIM_TEXTURE"
    },
    "PRIM_TYPE": {
        "prefix": "PRIM_TYPE",
        "body": [
           "PRIM_TYPE$0"
        ],
        "description": "PRIM_TYPE"
    },
    "PRIM_TYPE_BOX": {
        "prefix": "PRIM_TYPE_BOX",
        "body": [
           "PRIM_TYPE_BOX$0"
        ],
        "description": "PRIM_TYPE_BOX"
    },
    "PRIM_TYPE_CYLINDER": {
        "prefix": "PRIM_TYPE_CYLINDER",
        "body": [
           "PRIM_TYPE_CYLINDER$0"
        ],
        "description": "PRIM_TYPE_CYLINDER"
    },
    "PRIM_TYPE_PRISM": {
        "prefix": "PRIM_TYPE_PRISM",
        "body": [
           "PRIM_TYPE_PRISM$0"
        ],
        "description": "PRIM_TYPE_PRISM"
    },
    "PRIM_TYPE_RING": {
        "prefix": "PRIM_TYPE_RING",
        "body": [
           "PRIM_TYPE_RING$0"
        ],
        "description": "PRIM_TYPE_RING"
    },
    "PRIM_TYPE_SCULPT": {
        "prefix": "PRIM_TYPE_SCULPT",
        "body": [
           "PRIM_TYPE_SCULPT$0"
        ],
        "description": "PRIM_TYPE_SCULPT"
    },
    "PRIM_TYPE_SPHERE": {
        "prefix": "PRIM_TYPE_SPHERE",
        "body": [
           "PRIM_TYPE_SPHERE$0"
        ],
        "description": "PRIM_TYPE_SPHERE"
    },
    "PRIM_TYPE_TORUS": {
        "prefix": "PRIM_TYPE_TORUS",
        "body": [
           "PRIM_TYPE_TORUS$0"
        ],
        "description": "PRIM_TYPE_TORUS"
    },
    "PRIM_TYPE_TUBE": {
        "prefix": "PRIM_TYPE_TUBE",
        "body": [
           "PRIM_TYPE_TUBE$0"
        ],
        "description": "PRIM_TYPE_TUBE"
    },
    "PROFILE_NONE": {
        "prefix": "PROFILE_NONE",
        "body": [
           "PROFILE_NONE$0"
        ],
        "description": "Disables profiling"
    },
    "PROFILE_SCRIPT_MEMORY": {
        "prefix": "PROFILE_SCRIPT_MEMORY",
        "body": [
           "PROFILE_SCRIPT_MEMORY$0"
        ],
        "description": "Enables memory profiling"
    },
    "PUBLIC_CHANNEL": {
        "prefix": "PUBLIC_CHANNEL",
        "body": [
           "PUBLIC_CHANNEL$0"
        ],
        "description": "PUBLIC_CHANNEL"
    },
    "RAD_TO_DEG": {
        "prefix": "RAD_TO_DEG",
        "body": [
           "RAD_TO_DEG$0"
        ],
        "description": "RAD_TO_DEG"
    },
    "RCERR_CAST_TIME_EXCEEDED": {
        "prefix": "RCERR_CAST_TIME_EXCEEDED",
        "body": [
           "RCERR_CAST_TIME_EXCEEDED$0"
        ],
        "description": "The raycast failed because the parcel or agent has exceeded the maximum time allowed for raycasting. This resource pool is continually replenished, so waiting a few frames and retrying is likely to succeed."
    },
    "RCERR_SIM_PERF_LOW": {
        "prefix": "RCERR_SIM_PERF_LOW",
        "body": [
           "RCERR_SIM_PERF_LOW$0"
        ],
        "description": "The raycast failed because simulator performance is low. Wait a while and then try again. If possible reduce the scene complexity."
    },
    "RCERR_UNKNOWN": {
        "prefix": "RCERR_UNKNOWN",
        "body": [
           "RCERR_UNKNOWN$0"
        ],
        "description": "The raycast failed for an unspecified reason. Please submit a bug report."
    },
    "RC_DATA_FLAGS": {
        "prefix": "RC_DATA_FLAGS",
        "body": [
           "RC_DATA_FLAGS$0"
        ],
        "description": "Described in the RC_DATA_FLAGS section."
    },
    "RC_DETECT_PHANTOM": {
        "prefix": "RC_DETECT_PHANTOM",
        "body": [
           "RC_DETECT_PHANTOM$0"
        ],
        "description": "Set to TRUE (or nonzero) to detect phantom AND volume detect objects. It is not possible to detect only phantom objects or only volume detect objects. If set to TRUE, phantom and volume detect objects will always be detected, even if RC_REJECT_NONPHYSICAL and RC_REJECT_PHYSICAL are set in RC_REJECT_TYPES."
    },
    "RC_GET_LINK_NUM": {
        "prefix": "RC_GET_LINK_NUM",
        "body": [
           "RC_GET_LINK_NUM$0"
        ],
        "description": "RC_GET_LINK_NUM"
    },
    "RC_GET_NORMAL": {
        "prefix": "RC_GET_NORMAL",
        "body": [
           "RC_GET_NORMAL$0"
        ],
        "description": "RC_GET_NORMAL"
    },
    "RC_GET_ROOT_KEY": {
        "prefix": "RC_GET_ROOT_KEY",
        "body": [
           "RC_GET_ROOT_KEY$0"
        ],
        "description": "RC_GET_ROOT_KEY"
    },
    "RC_MAX_HITS": {
        "prefix": "RC_MAX_HITS",
        "body": [
           "RC_MAX_HITS$0"
        ],
        "description": "Maximum number of hits to return. Maximum value is 256. To avoid performance issues, keep it small."
    },
    "RC_REJECT_AGENTS": {
        "prefix": "RC_REJECT_AGENTS",
        "body": [
           "RC_REJECT_AGENTS$0"
        ],
        "description": "RC_REJECT_AGENTS"
    },
    "RC_REJECT_LAND": {
        "prefix": "RC_REJECT_LAND",
        "body": [
           "RC_REJECT_LAND$0"
        ],
        "description": "RC_REJECT_LAND"
    },
    "RC_REJECT_NONPHYSICAL": {
        "prefix": "RC_REJECT_NONPHYSICAL",
        "body": [
           "RC_REJECT_NONPHYSICAL$0"
        ],
        "description": "RC_REJECT_NONPHYSICAL"
    },
    "RC_REJECT_PHYSICAL": {
        "prefix": "RC_REJECT_PHYSICAL",
        "body": [
           "RC_REJECT_PHYSICAL$0"
        ],
        "description": "RC_REJECT_PHYSICAL"
    },
    "RC_REJECT_TYPES": {
        "prefix": "RC_REJECT_TYPES",
        "body": [
           "RC_REJECT_TYPES$0"
        ],
        "description": "Mask used to ignore specific types of objects (and avatars)."
    },
    "REGION_FLAG_ALLOW_DAMAGE": {
        "prefix": "REGION_FLAG_ALLOW_DAMAGE",
        "body": [
           "REGION_FLAG_ALLOW_DAMAGE$0"
        ],
        "description": "REGION_FLAG_ALLOW_DAMAGE"
    },
    "REGION_FLAG_ALLOW_DIRECT_TELEPORT": {
        "prefix": "REGION_FLAG_ALLOW_DIRECT_TELEPORT",
        "body": [
           "REGION_FLAG_ALLOW_DIRECT_TELEPORT$0"
        ],
        "description": "REGION_FLAG_ALLOW_DIRECT_TELEPORT"
    },
    "REGION_FLAG_BLOCK_FLY": {
        "prefix": "REGION_FLAG_BLOCK_FLY",
        "body": [
           "REGION_FLAG_BLOCK_FLY$0"
        ],
        "description": "REGION_FLAG_BLOCK_FLY"
    },
    "REGION_FLAG_BLOCK_TERRAFORM": {
        "prefix": "REGION_FLAG_BLOCK_TERRAFORM",
        "body": [
           "REGION_FLAG_BLOCK_TERRAFORM$0"
        ],
        "description": "REGION_FLAG_BLOCK_TERRAFORM"
    },
    "REGION_FLAG_DISABLE_COLLISIONS": {
        "prefix": "REGION_FLAG_DISABLE_COLLISIONS",
        "body": [
           "REGION_FLAG_DISABLE_COLLISIONS$0"
        ],
        "description": "REGION_FLAG_DISABLE_COLLISIONS"
    },
    "REGION_FLAG_DISABLE_PHYSICS": {
        "prefix": "REGION_FLAG_DISABLE_PHYSICS",
        "body": [
           "REGION_FLAG_DISABLE_PHYSICS$0"
        ],
        "description": "REGION_FLAG_DISABLE_PHYSICS"
    },
    "REGION_FLAG_FIXED_SUN": {
        "prefix": "REGION_FLAG_FIXED_SUN",
        "body": [
           "REGION_FLAG_FIXED_SUN$0"
        ],
        "description": "REGION_FLAG_FIXED_SUN"
    },
    "REGION_FLAG_RESTRICT_PUSHOBJECT": {
        "prefix": "REGION_FLAG_RESTRICT_PUSHOBJECT",
        "body": [
           "REGION_FLAG_RESTRICT_PUSHOBJECT$0"
        ],
        "description": "REGION_FLAG_RESTRICT_PUSHOBJECT"
    },
    "REGION_FLAG_SANDBOX": {
        "prefix": "REGION_FLAG_SANDBOX",
        "body": [
           "REGION_FLAG_SANDBOX$0"
        ],
        "description": "REGION_FLAG_SANDBOX"
    },
    "REMOTE_DATA_CHANNEL": {
        "prefix": "REMOTE_DATA_CHANNEL",
        "body": [
           "REMOTE_DATA_CHANNEL$0"
        ],
        "description": "The integer constant REMOTE_DATA_CHANNEL has the value 1"
    },
    "REMOTE_DATA_REQUEST": {
        "prefix": "REMOTE_DATA_REQUEST",
        "body": [
           "REMOTE_DATA_REQUEST$0"
        ],
        "description": "The integer constant REMOTE_DATA_REPLY has the value 2"
    },
    "REMOTE_DATA_REPLY": {
        "prefix": "REMOTE_DATA_REPLY",
        "body": [
           "REMOTE_DATA_REPLY$0"
        ],
        "description": "The integer constant REMOTE_DATA_REPLY has the value 3"
    },
    "REVERSE": {
        "prefix": "REVERSE",
        "body": [
           "REVERSE$0"
        ],
        "description": "REVERSE"
    },
    "ROTATE": {
        "prefix": "ROTATE",
        "body": [
           "ROTATE$0"
        ],
        "description": "ROTATE"
    },
    "SCALE": {
        "prefix": "SCALE",
        "body": [
           "SCALE$0"
        ],
        "description": "SCALE"
    },
    "SCRIPTED": {
        "prefix": "SCRIPTED",
        "body": [
           "SCRIPTED$0"
        ],
        "description": "SCRIPTED"
    },
    "SIM_STAT_PCT_CHARS_STEPPED": {
        "prefix": "SIM_STAT_PCT_CHARS_STEPPED",
        "body": [
           "SIM_STAT_PCT_CHARS_STEPPED$0"
        ],
        "description": "The % of pathfinding characters updated each frame, averaged over the last minute. The value corresponds to the \"Characters Updated\" stat in the viewer's Statistics Bar.\n- Possible Return: [0.0, 100.0]"
    },
    "SMOOTH": {
        "prefix": "SMOOTH",
        "body": [
           "SMOOTH$0"
        ],
        "description": "SMOOTH"
    },
    "SQRT2": {
        "prefix": "SQRT2",
        "body": [
           "SQRT2$0"
        ],
        "description": "SQRT2"
    },
    "STATUS_BLOCK_GRAB": {
        "prefix": "STATUS_BLOCK_GRAB",
        "body": [
           "STATUS_BLOCK_GRAB$0"
        ],
        "description": "STATUS_BLOCK_GRAB"
    },
    "STATUS_BLOCK_GRAB_OBJECT": {
        "prefix": "STATUS_BLOCK_GRAB_OBJECT",
        "body": [
           "STATUS_BLOCK_GRAB_OBJECT$0"
        ],
        "description": "STATUS_BLOCK_GRAB_OBJECT"
    },
    "STATUS_BOUNDS_ERROR": {
        "prefix": "STATUS_BOUNDS_ERROR",
        "body": [
           "STATUS_BOUNDS_ERROR$0"
        ],
        "description": "Argument(s) passed to function had a bounds error"
    },
    "STATUS_CAST_SHADOWS": {
        "prefix": "STATUS_CAST_SHADOWS",
        "body": [
           "STATUS_CAST_SHADOWS$0"
        ],
        "description": "STATUS_CAST_SHADOWS"
    },
    "STATUS_DIE_AT_EDGE": {
        "prefix": "STATUS_DIE_AT_EDGE",
        "body": [
           "STATUS_DIE_AT_EDGE$0"
        ],
        "description": "STATUS_DIE_AT_EDGE"
    },
    "STATUS_INTERNAL_ERROR": {
        "prefix": "STATUS_INTERNAL_ERROR",
        "body": [
           "STATUS_INTERNAL_ERROR$0"
        ],
        "description": "An internal error occurred"
    },
    "STATUS_MALFORMED_PARAMS": {
        "prefix": "STATUS_MALFORMED_PARAMS",
        "body": [
           "STATUS_MALFORMED_PARAMS$0"
        ],
        "description": "Function was called with malformed parameters"
    },
    "STATUS_NOT_FOUND": {
        "prefix": "STATUS_NOT_FOUND",
        "body": [
           "STATUS_NOT_FOUND$0"
        ],
        "description": "Object or other item was not found"
    },
    "STATUS_NOT_SUPPORTED": {
        "prefix": "STATUS_NOT_SUPPORTED",
        "body": [
           "STATUS_NOT_SUPPORTED$0"
        ],
        "description": "Feature not supported"
    },
    "STATUS_OK": {
        "prefix": "STATUS_OK",
        "body": [
           "STATUS_OK$0"
        ],
        "description": "Result of function call was success"
    },
    "STATUS_PHANTOM": {
        "prefix": "STATUS_PHANTOM",
        "body": [
           "STATUS_PHANTOM$0"
        ],
        "description": "STATUS_PHANTOM"
    },
    "STATUS_PHYSICS": {
        "prefix": "STATUS_PHYSICS",
        "body": [
           "STATUS_PHYSICS$0"
        ],
        "description": "STATUS_PHYSICS"
    },
    "STATUS_RETURN_AT_EDGE": {
        "prefix": "STATUS_RETURN_AT_EDGE",
        "body": [
           "STATUS_RETURN_AT_EDGE$0"
        ],
        "description": "STATUS_RETURN_AT_EDGE"
    },
    "STATUS_ROTATE_X": {
        "prefix": "STATUS_ROTATE_X",
        "body": [
           "STATUS_ROTATE_X$0"
        ],
        "description": "STATUS_ROTATE_X"
    },
    "STATUS_ROTATE_Y": {
        "prefix": "STATUS_ROTATE_Y",
        "body": [
           "STATUS_ROTATE_Y$0"
        ],
        "description": "STATUS_ROTATE_Y"
    },
    "STATUS_ROTATE_Z": {
        "prefix": "STATUS_ROTATE_Z",
        "body": [
           "STATUS_ROTATE_Z$0"
        ],
        "description": "STATUS_ROTATE_Z"
    },
    "STATUS_SANDBOX": {
        "prefix": "STATUS_SANDBOX",
        "body": [
           "STATUS_SANDBOX$0"
        ],
        "description": "STATUS_SANDBOX"
    },
    "STATUS_TYPE_MISMATCH": {
        "prefix": "STATUS_TYPE_MISMATCH",
        "body": [
           "STATUS_TYPE_MISMATCH$0"
        ],
        "description": "Argument(s) passed to function had a type mismatch"
    },
    "STATUS_WHITELIST_FAILED": {
        "prefix": "STATUS_WHITELIST_FAILED",
        "body": [
           "STATUS_WHITELIST_FAILED$0"
        ],
        "description": "Whitelist Failed"
    },
    "STRING_TRIM": {
        "prefix": "STRING_TRIM",
        "body": [
           "STRING_TRIM$0"
        ],
        "description": "STRING_TRIM"
    },
    "STRING_TRIM_HEAD": {
        "prefix": "STRING_TRIM_HEAD",
        "body": [
           "STRING_TRIM_HEAD$0"
        ],
        "description": "STRING_TRIM_HEAD"
    },
    "STRING_TRIM_TAIL": {
        "prefix": "STRING_TRIM_TAIL",
        "body": [
           "STRING_TRIM_TAIL$0"
        ],
        "description": "STRING_TRIM_TAIL"
    },
    "TEXTURE_DEFAULT": {
        "prefix": "TEXTURE_DEFAULT",
        "body": [
           "TEXTURE_DEFAULT$0"
        ],
        "description": "TEXTURE_DEFAULT"
    },
    "TEXTURE_BLANK": {
        "prefix": "TEXTURE_BLANK",
        "body": [
           "TEXTURE_BLANK$0"
        ],
        "description": "TEXTURE_BLANK"
    },
    "TEXTURE_MEDIA": {
        "prefix": "TEXTURE_MEDIA",
        "body": [
           "TEXTURE_MEDIA$0"
        ],
        "description": "TEXTURE_MEDIA"
    },
    "TEXTURE_PLYWOOD": {
        "prefix": "TEXTURE_PLYWOOD",
        "body": [
           "TEXTURE_PLYWOOD$0"
        ],
        "description": "TEXTURE_PLYWOOD"
    },
    "TEXTURE_TRANSPARENT": {
        "prefix": "TEXTURE_TRANSPARENT",
        "body": [
           "TEXTURE_TRANSPARENT$0"
        ],
        "description": "TEXTURE_TRANSPARENT"
    },
    "TOUCH_INVALID_FACE": {
        "prefix": "TOUCH_INVALID_FACE",
        "body": [
           "TOUCH_INVALID_FACE$0"
        ],
        "description": "TOUCH_INVALID_FACE"
    },
    "TOUCH_INVALID_TEXCOORD": {
        "prefix": "TOUCH_INVALID_TEXCOORD",
        "body": [
           "TOUCH_INVALID_TEXCOORD$0"
        ],
        "description": "TOUCH_INVALID_TEXCOORD"
    },
    "TOUCH_INVALID_VECTOR": {
        "prefix": "TOUCH_INVALID_VECTOR",
        "body": [
           "TOUCH_INVALID_VECTOR$0"
        ],
        "description": "TOUCH_INVALID_VECTOR"
    },
    "TRAVERSAL_TYPE": {
        "prefix": "TRAVERSAL_TYPE",
        "body": [
           "TRAVERSAL_TYPE$0"
        ],
        "description": "Controls the speed at which characters moves on terrain that is less than 100% walkable will move faster (e.g., a cat crossing a street) or slower (e.g., a car driving in a swamp).\nTo use _FAST or _SLOW, you must specify a CHARACTER_TYPE.\n- Default: TRAVERSAL_TYPE_SLOW\n- Range / Values: TRAVERSAL_TYPE_FAST, TRAVERSAL_TYPE_SLOW, TRAVERSAL_TYPE_NONE"
    },
    "TRAVERSAL_TYPE_FAST": {
        "prefix": "TRAVERSAL_TYPE_FAST",
        "body": [
           "TRAVERSAL_TYPE_FAST$0"
        ],
        "description": "TRAVERSAL_TYPE_FAST"
    },
    "TRAVERSAL_TYPE_SLOW": {
        "prefix": "TRAVERSAL_TYPE_SLOW",
        "body": [
           "TRAVERSAL_TYPE_SLOW$0"
        ],
        "description": "TRAVERSAL_TYPE_SLOW"
    },
    "TRAVERSAL_TYPE_NONE": {
        "prefix": "TRAVERSAL_TYPE_NONE",
        "body": [
           "TRAVERSAL_TYPE_NONE$0"
        ],
        "description": "TRAVERSAL_TYPE_NONE"
    },
    "TRUE": {
        "prefix": "TRUE",
        "body": [
           "TRUE$0"
        ],
        "description": "TRUE"
    },
    "TWO_PI": {
        "prefix": "TWO_PI",
        "body": [
           "TWO_PI$0"
        ],
        "description": "TWO_PI"
    },
    "TYPE_FLOAT": {
        "prefix": "TYPE_FLOAT",
        "body": [
           "TYPE_FLOAT$0"
        ],
        "description": "TYPE_FLOAT"
    },
    "TYPE_INTEGER": {
        "prefix": "TYPE_INTEGER",
        "body": [
           "TYPE_INTEGER$0"
        ],
        "description": "TYPE_INTEGER"
    },
    "TYPE_INVALID": {
        "prefix": "TYPE_INVALID",
        "body": [
           "TYPE_INVALID$0"
        ],
        "description": "TYPE_INVALID"
    },
    "TYPE_KEY": {
        "prefix": "TYPE_KEY",
        "body": [
           "TYPE_KEY$0"
        ],
        "description": "TYPE_KEY"
    },
    "TYPE_ROTATION": {
        "prefix": "TYPE_ROTATION",
        "body": [
           "TYPE_ROTATION$0"
        ],
        "description": "TYPE_ROTATION"
    },
    "TYPE_STRING": {
        "prefix": "TYPE_STRING",
        "body": [
           "TYPE_STRING$0"
        ],
        "description": "TYPE_STRING"
    },
    "TYPE_VECTOR": {
        "prefix": "TYPE_VECTOR",
        "body": [
           "TYPE_VECTOR$0"
        ],
        "description": "TYPE_VECTOR"
    },
    "URL_REQUEST_DENIED": {
        "prefix": "URL_REQUEST_DENIED",
        "body": [
           "URL_REQUEST_DENIED$0"
        ],
        "description": "URL_REQUEST_DENIED"
    },
    "URL_REQUEST_GRANTED": {
        "prefix": "URL_REQUEST_GRANTED",
        "body": [
           "URL_REQUEST_GRANTED$0"
        ],
        "description": "URL_REQUEST_GRANTED"
    },
    "VEHICLE_FLAG_NO_FLY_UP": {
        "prefix": "VEHICLE_FLAG_NO_FLY_UP",
        "body": [
           "VEHICLE_FLAG_NO_FLY_UP$0"
        ],
        "description": "VEHICLE_FLAG_NO_FLY_UP"
    },
    "VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY": {
        "prefix": "VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY",
        "body": [
           "VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY$0"
        ],
        "description": "VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY"
    },
    "VEHICLE_ANGULAR_DEFLECTION_TIMESCALE": {
        "prefix": "VEHICLE_ANGULAR_DEFLECTION_TIMESCALE",
        "body": [
           "VEHICLE_ANGULAR_DEFLECTION_TIMESCALE$0"
        ],
        "description": "VEHICLE_ANGULAR_DEFLECTION_TIMESCALE"
    },
    "VEHICLE_ANGULAR_FRICTION_TIMESCALE": {
        "prefix": "VEHICLE_ANGULAR_FRICTION_TIMESCALE",
        "body": [
           "VEHICLE_ANGULAR_FRICTION_TIMESCALE$0"
        ],
        "description": "VEHICLE_ANGULAR_FRICTION_TIMESCALE"
    },
    "VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE": {
        "prefix": "VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE",
        "body": [
           "VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE$0"
        ],
        "description": "VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE"
    },
    "VEHICLE_ANGULAR_MOTOR_DIRECTION": {
        "prefix": "VEHICLE_ANGULAR_MOTOR_DIRECTION",
        "body": [
           "VEHICLE_ANGULAR_MOTOR_DIRECTION$0"
        ],
        "description": "VEHICLE_ANGULAR_MOTOR_DIRECTION"
    },
    "VEHICLE_ANGULAR_MOTOR_TIMESCALE": {
        "prefix": "VEHICLE_ANGULAR_MOTOR_TIMESCALE",
        "body": [
           "VEHICLE_ANGULAR_MOTOR_TIMESCALE$0"
        ],
        "description": "VEHICLE_ANGULAR_MOTOR_TIMESCALE"
    },
    "VEHICLE_BANKING_EFFICIENCY": {
        "prefix": "VEHICLE_BANKING_EFFICIENCY",
        "body": [
           "VEHICLE_BANKING_EFFICIENCY$0"
        ],
        "description": "VEHICLE_BANKING_EFFICIENCY"
    },
    "VEHICLE_BANKING_MIX": {
        "prefix": "VEHICLE_BANKING_MIX",
        "body": [
           "VEHICLE_BANKING_MIX$0"
        ],
        "description": "VEHICLE_BANKING_MIX"
    },
    "VEHICLE_BANKING_TIMESCALE": {
        "prefix": "VEHICLE_BANKING_TIMESCALE",
        "body": [
           "VEHICLE_BANKING_TIMESCALE$0"
        ],
        "description": "VEHICLE_BANKING_TIMESCALE"
    },
    "VEHICLE_BUOYANCY": {
        "prefix": "VEHICLE_BUOYANCY",
        "body": [
           "VEHICLE_BUOYANCY$0"
        ],
        "description": "VEHICLE_BUOYANCY"
    },
    "VEHICLE_FLAG_CAMERA_DECOUPLED": {
        "prefix": "VEHICLE_FLAG_CAMERA_DECOUPLED",
        "body": [
           "VEHICLE_FLAG_CAMERA_DECOUPLED$0"
        ],
        "description": "VEHICLE_FLAG_CAMERA_DECOUPLED"
    },
    "VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT": {
        "prefix": "VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT",
        "body": [
           "VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT$0"
        ],
        "description": "VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT"
    },
    "VEHICLE_FLAG_HOVER_TERRAIN_ONLY": {
        "prefix": "VEHICLE_FLAG_HOVER_TERRAIN_ONLY",
        "body": [
           "VEHICLE_FLAG_HOVER_TERRAIN_ONLY$0"
        ],
        "description": "VEHICLE_FLAG_HOVER_TERRAIN_ONLY"
    },
    "VEHICLE_FLAG_HOVER_UP_ONLY": {
        "prefix": "VEHICLE_FLAG_HOVER_UP_ONLY",
        "body": [
           "VEHICLE_FLAG_HOVER_UP_ONLY$0"
        ],
        "description": "VEHICLE_FLAG_HOVER_UP_ONLY"
    },
    "VEHICLE_FLAG_HOVER_WATER_ONLY": {
        "prefix": "VEHICLE_FLAG_HOVER_WATER_ONLY",
        "body": [
           "VEHICLE_FLAG_HOVER_WATER_ONLY$0"
        ],
        "description": "VEHICLE_FLAG_HOVER_WATER_ONLY"
    },
    "VEHICLE_FLAG_LIMIT_MOTOR_UP": {
        "prefix": "VEHICLE_FLAG_LIMIT_MOTOR_UP",
        "body": [
           "VEHICLE_FLAG_LIMIT_MOTOR_UP$0"
        ],
        "description": "VEHICLE_FLAG_LIMIT_MOTOR_UP"
    },
    "VEHICLE_FLAG_LIMIT_ROLL_ONLY": {
        "prefix": "VEHICLE_FLAG_LIMIT_ROLL_ONLY",
        "body": [
           "VEHICLE_FLAG_LIMIT_ROLL_ONLY$0"
        ],
        "description": "VEHICLE_FLAG_LIMIT_ROLL_ONLY"
    },
    "VEHICLE_FLAG_MOUSELOOK_BANK": {
        "prefix": "VEHICLE_FLAG_MOUSELOOK_BANK",
        "body": [
           "VEHICLE_FLAG_MOUSELOOK_BANK$0"
        ],
        "description": "VEHICLE_FLAG_MOUSELOOK_BANK"
    },
    "VEHICLE_FLAG_MOUSELOOK_STEER": {
        "prefix": "VEHICLE_FLAG_MOUSELOOK_STEER",
        "body": [
           "VEHICLE_FLAG_MOUSELOOK_STEER$0"
        ],
        "description": "VEHICLE_FLAG_MOUSELOOK_STEER"
    },
    "VEHICLE_FLAG_NO_DEFLECTION_UP": {
        "prefix": "VEHICLE_FLAG_NO_DEFLECTION_UP",
        "body": [
           "VEHICLE_FLAG_NO_DEFLECTION_UP$0"
        ],
        "description": "VEHICLE_FLAG_NO_DEFLECTION_UP"
    },
    "VEHICLE_HOVER_EFFICIENCY": {
        "prefix": "VEHICLE_HOVER_EFFICIENCY",
        "body": [
           "VEHICLE_HOVER_EFFICIENCY$0"
        ],
        "description": "VEHICLE_HOVER_EFFICIENCY"
    },
    "VEHICLE_HOVER_HEIGHT": {
        "prefix": "VEHICLE_HOVER_HEIGHT",
        "body": [
           "VEHICLE_HOVER_HEIGHT$0"
        ],
        "description": "VEHICLE_HOVER_HEIGHT"
    },
    "VEHICLE_HOVER_TIMESCALE": {
        "prefix": "VEHICLE_HOVER_TIMESCALE",
        "body": [
           "VEHICLE_HOVER_TIMESCALE$0"
        ],
        "description": "VEHICLE_HOVER_TIMESCALE"
    },
    "VEHICLE_LINEAR_DEFLECTION_EFFICIENCY": {
        "prefix": "VEHICLE_LINEAR_DEFLECTION_EFFICIENCY",
        "body": [
           "VEHICLE_LINEAR_DEFLECTION_EFFICIENCY$0"
        ],
        "description": "VEHICLE_LINEAR_DEFLECTION_EFFICIENCY"
    },
    "VEHICLE_LINEAR_DEFLECTION_TIMESCALE": {
        "prefix": "VEHICLE_LINEAR_DEFLECTION_TIMESCALE",
        "body": [
           "VEHICLE_LINEAR_DEFLECTION_TIMESCALE$0"
        ],
        "description": "VEHICLE_LINEAR_DEFLECTION_TIMESCALE"
    },
    "VEHICLE_LINEAR_FRICTION_TIMESCALE": {
        "prefix": "VEHICLE_LINEAR_FRICTION_TIMESCALE",
        "body": [
           "VEHICLE_LINEAR_FRICTION_TIMESCALE$0"
        ],
        "description": "VEHICLE_LINEAR_FRICTION_TIMESCALE"
    },
    "VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE": {
        "prefix": "VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE",
        "body": [
           "VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE$0"
        ],
        "description": "VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE"
    },
    "VEHICLE_LINEAR_MOTOR_DIRECTION": {
        "prefix": "VEHICLE_LINEAR_MOTOR_DIRECTION",
        "body": [
           "VEHICLE_LINEAR_MOTOR_DIRECTION$0"
        ],
        "description": "VEHICLE_LINEAR_MOTOR_DIRECTION"
    },
    "VEHICLE_LINEAR_MOTOR_OFFSET": {
        "prefix": "VEHICLE_LINEAR_MOTOR_OFFSET",
        "body": [
           "VEHICLE_LINEAR_MOTOR_OFFSET$0"
        ],
        "description": "VEHICLE_LINEAR_MOTOR_OFFSET"
    },
    "VEHICLE_LINEAR_MOTOR_TIMESCALE": {
        "prefix": "VEHICLE_LINEAR_MOTOR_TIMESCALE",
        "body": [
           "VEHICLE_LINEAR_MOTOR_TIMESCALE$0"
        ],
        "description": "VEHICLE_LINEAR_MOTOR_TIMESCALE"
    },
    "VEHICLE_REFERENCE_FRAME": {
        "prefix": "VEHICLE_REFERENCE_FRAME",
        "body": [
           "VEHICLE_REFERENCE_FRAME$0"
        ],
        "description": "VEHICLE_REFERENCE_FRAME"
    },
    "VEHICLE_TYPE_AIRPLANE": {
        "prefix": "VEHICLE_TYPE_AIRPLANE",
        "body": [
           "VEHICLE_TYPE_AIRPLANE$0"
        ],
        "description": "VEHICLE_TYPE_AIRPLANE"
    },
    "VEHICLE_TYPE_BALLOON": {
        "prefix": "VEHICLE_TYPE_BALLOON",
        "body": [
           "VEHICLE_TYPE_BALLOON$0"
        ],
        "description": "VEHICLE_TYPE_BALLOON"
    },
    "VEHICLE_TYPE_BOAT": {
        "prefix": "VEHICLE_TYPE_BOAT",
        "body": [
           "VEHICLE_TYPE_BOAT$0"
        ],
        "description": "VEHICLE_TYPE_BOAT"
    },
    "VEHICLE_TYPE_CAR": {
        "prefix": "VEHICLE_TYPE_CAR",
        "body": [
           "VEHICLE_TYPE_CAR$0"
        ],
        "description": "VEHICLE_TYPE_CAR"
    },
    "VEHICLE_TYPE_NONE": {
        "prefix": "VEHICLE_TYPE_NONE",
        "body": [
           "VEHICLE_TYPE_NONE$0"
        ],
        "description": "VEHICLE_TYPE_NONE"
    },
    "VEHICLE_TYPE_SLED": {
        "prefix": "VEHICLE_TYPE_SLED",
        "body": [
           "VEHICLE_TYPE_SLED$0"
        ],
        "description": "VEHICLE_TYPE_SLED"
    },
    "VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY": {
        "prefix": "VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY",
        "body": [
           "VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY$0"
        ],
        "description": "VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY"
    },
    "VEHICLE_VERTICAL_ATTRACTION_TIMESCALE": {
        "prefix": "VEHICLE_VERTICAL_ATTRACTION_TIMESCALE",
        "body": [
           "VEHICLE_VERTICAL_ATTRACTION_TIMESCALE$0"
        ],
        "description": "VEHICLE_VERTICAL_ATTRACTION_TIMESCALE"
    },
    "VERTICAL": {
        "prefix": "VERTICAL",
        "body": [
           "VERTICAL$0"
        ],
        "description": "VERTICAL"
    },
    "ZERO_ROTATION": {
        "prefix": "ZERO_ROTATION",
        "body": [
           "ZERO_ROTATION$0"
        ],
        "description": "ZERO_ROTATION"
    },
    "ZERO_VECTOR": {
        "prefix": "ZERO_VECTOR",
        "body": [
           "ZERO_VECTOR$0"
        ],
        "description": "ZERO_VECTOR"
    },



    "XP_ERROR_NONE": {
        "prefix": "XP_ERROR_NONE",
        "body": [
           "XP_ERROR_NONE$0"
        ],
        "description": "No error was detected"
    },
    "XP_ERROR_THROTTLED": {
        "prefix": "XP_ERROR_THROTTLED",
        "body": [
           "XP_ERROR_THROTTLED$0"
        ],
        "description": "The call failed due to too many recent calls."
    },
    "XP_ERROR_EXPERIENCES_DISABLED": {
        "prefix": "XP_ERROR_EXPERIENCES_DISABLED",
        "body": [
           "XP_ERROR_EXPERIENCES_DISABLED$0"
        ],
        "description": "The region currently has experiences disabled."
    },
    "XP_ERROR_INVALID_PARAMETERS": {
        "prefix": "XP_ERROR_INVALID_PARAMETERS",
        "body": [
           "XP_ERROR_INVALID_PARAMETERS$0"
        ],
        "description": "One of the string arguments was too big to fit in the key-value store."
    },
    "XP_ERROR_NOT_PERMITTED": {
        "prefix": "XP_ERROR_NOT_PERMITTED",
        "body": [
           "XP_ERROR_NOT_PERMITTED$0"
        ],
        "description": "Experience permissions were denied by the user."
    },
    "XP_ERROR_NO_EXPERIENCE": {
        "prefix": "XP_ERROR_NO_EXPERIENCE",
        "body": [
           "XP_ERROR_NO_EXPERIENCE$0"
        ],
        "description": "This script is not associated with an experience."
    },
    "XP_ERROR_NOT_FOUND": {
        "prefix": "XP_ERROR_NOT_FOUND",
        "body": [
           "XP_ERROR_NOT_FOUND$0"
        ],
        "description": "The sim was unable to verify the validity of the experience. Retrying after a short wait is advised."
    },
    "XP_ERROR_INVALID_EXPERIENCE": {
        "prefix": "XP_ERROR_INVALID_EXPERIENCE",
        "body": [
           "XP_ERROR_INVALID_EXPERIENCE$0"
        ],
        "description": "The script is associated with an experience that no longer exists."
    },
    "XP_ERROR_EXPERIENCE_DISABLED": {
        "prefix": "XP_ERROR_EXPERIENCE_DISABLED",
        "body": [
           "XP_ERROR_EXPERIENCE_DISABLED$0"
        ],
        "description": "The experience owner has temporarily disabled the experience."
    },
    "XP_ERROR_EXPERIENCE_SUSPENDED": {
        "prefix": "XP_ERROR_EXPERIENCE_SUSPENDED",
        "body": [
           "XP_ERROR_EXPERIENCE_SUSPENDED$0"
        ],
        "description": "The experience has been suspended by Linden Lab customer support."
    },
    "XP_ERROR_UNKNOWN_ERROR": {
        "prefix": "XP_ERROR_UNKNOWN_ERROR",
        "body": [
           "XP_ERROR_UNKNOWN_ERROR$0"
        ],
        "description": "An unknown error not covered by any of the other predetermined error states."
    },
    "XP_ERROR_QUOTA_EXCEEDED": {
        "prefix": "XP_ERROR_QUOTA_EXCEEDED",
        "body": [
           "XP_ERROR_QUOTA_EXCEEDED$0"
        ],
        "description": "An attempt to write data to the key-value store failed due to the data quota being met."
    },
    "XP_ERROR_STORE_DISABLED": {
        "prefix": "XP_ERROR_STORE_DISABLED",
        "body": [
           "XP_ERROR_STORE_DISABLED$0"
        ],
        "description": "They key-value store is currently disabled on this region."
    },
    "XP_ERROR_STORAGE_EXCEPTION": {
        "prefix": "XP_ERROR_STORAGE_EXCEPTION",
        "body": [
           "XP_ERROR_STORAGE_EXCEPTION$0"
        ],
        "description": "Unable to communicate with the key-value store."
    },
    "XP_ERROR_KEY_NOT_FOUND": {
        "prefix": "XP_ERROR_KEY_NOT_FOUND",
        "body": [
           "XP_ERROR_KEY_NOT_FOUND$0"
        ],
        "description": "They requested key does not exist."
    },
    "XP_ERROR_RETRY_UPDATE": {
        "prefix": "XP_ERROR_RETRY_UPDATE",
        "body": [
           "XP_ERROR_RETRY_UPDATE$0"
        ],
        "description": "A checked update failed due to an out of date request."
    },
    "XP_ERROR_MATURITY_EXCEEDED": {
        "prefix": "XP_ERROR_MATURITY_EXCEEDED",
        "body": [
           "XP_ERROR_MATURITY_EXCEEDED$0"
        ],
        "description": "The content rating of the experience exceeds that of the region."
    },
    "XP_ERROR_NOT_PERMITTED_LAND": {
        "prefix": "XP_ERROR_NOT_PERMITTED_LAND",
        "body": [
           "XP_ERROR_NOT_PERMITTED_LAND$0"
        ],
        "description": "The experience is blocked or not enabled for this land."
    },
    "XP_ERROR_REQUEST_PERM_TIMEOUT": {
        "prefix": "XP_ERROR_REQUEST_PERM_TIMEOUT",
        "body": [
           "XP_ERROR_REQUEST_PERM_TIMEOUT$0"
        ],
        "description": "The request for experience permissions was ignored."
    },



    "CHARACTER_CMD_JUMP": {
        "prefix": "CHARACTER_CMD_JUMP",
        "body": [
           "CHARACTER_CMD_JUMP$0"
        ],
        "description": "Makes the character jump.\nThe option list is required to start with a height parameter: [float height]\n• float height – height to jump, between 0.1m and 2.0m"
    },
    "CHARACTER_CMD_SMOOTH_STOP": {
        "prefix": "CHARACTER_CMD_SMOOTH_STOP",
        "body": [
           "CHARACTER_CMD_SMOOTH_STOP$0"
        ],
        "description": "Stops any current pathfinding operation in a smooth like fashion."
    },
    "CHARACTER_CMD_STOP": {
        "prefix": "CHARACTER_CMD_STOP",
        "body": [
           "CHARACTER_CMD_STOP$0"
        ],
        "description": "Stops any current pathfinding operation."
    },


    
    "GCNP_RADIUS": {
        "prefix": "GCNP_RADIUS",
        "body": [
           "GCNP_RADIUS$0"
        ],
        "description": "Limits how far out to search for a navigation point.\n- Parameters: [ float distance ]\n- Default: [ 20.0 ]"
    },
    "GCNP_STATIC": {
        "prefix": "GCNP_STATIC",
        "body": [
           "GCNP_STATIC$0"
        ],
        "description": "Specifies whether the test should use the static or dynamic nav mesh. In the static case, all dynamic obstacles are ignored.\n- Parameters: [ integer use_static_mesh ]\n- Default: [ FALSE ]"
    },



    
    "PURSUIT_OFFSET": {
        "prefix": "PURSUIT_OFFSET",
        "body": [
           "PURSUIT_OFFSET$0"
        ],
        "description": "Go to a position offset from the target.\n- Default Value: ZERO_VECTOR\n- Usage: [PURSUIT_OFFSET, vector offset]"
    },
    "REQUIRE_LINE_OF_SIGHT": {
        "prefix": "REQUIRE_LINE_OF_SIGHT",
        "body": [
           "REQUIRE_LINE_OF_SIGHT$0"
        ],
        "description": "Define whether the character needs a physical line-of-sight to give chase. When enabled, the character will not pick a new target position while there is a something solid between the character and the target object/agent.\n- Default Value: FALSE\n- Usage: [REQUIRE_LINE_OF_SIGHT, integer boolean]"
    },
    "PURSUIT_FUZZ_FACTOR": {
        "prefix": "PURSUIT_FUZZ_FACTOR",
        "body": [
           "PURSUIT_FUZZ_FACTOR$0"
        ],
        "description": "Selects a random destination near the PURSUIT_OFFSET. The valid fuzz factor range is from 0 to 1, where 1 is most random. This option requires a nonzero PURSUIT_OFFSET.\n- Default Value: 0.0\n- Usage: [PURSUIT_FUZZ_FACTOR, float factor]"
    },
    "PURSUIT_INTERCEPT": {
        "prefix": "PURSUIT_INTERCEPT",
        "body": [
           "PURSUIT_INTERCEPT$0"
        ],
        "description": "Define whether the character attempts to predict the target's future location.\n- Default Value: FALSE\n- Usage: [PURSUIT_INTERCEPT, integer boolean]"
    },
    "PURSUIT_GOAL_TOLERANCE": {
        "prefix": "PURSUIT_GOAL_TOLERANCE",
        "body": [
           "PURSUIT_GOAL_TOLERANCE$0"
        ],
        "description": "Defines approximately how close the character must be to the current goal to consider itself to be at the desired position. The valid range is from 0.25 to 10m.\n- Default Value: Default is proportional to character size\n- Usage: [PURSUIT_GOAL_TOLERANCE, float tolerance]"
    },



    "PRIM_MEDIA_CONTROLS": {
        "prefix": "PRIM_MEDIA_CONTROLS",
        "body": [
           "PRIM_MEDIA_CONTROLS$0"
        ],
        "description": "PRIM_MEDIA_CONTROLS"
    },
    "PRIM_MEDIA_CONTROLS_STANDARD": {
        "prefix": "PRIM_MEDIA_CONTROLS_STANDARD",
        "body": [
           "PRIM_MEDIA_CONTROLS_STANDARD$0"
        ],
        "description": "PRIM_MEDIA_CONTROLS_STANDARD"
    },
    "PRIM_MEDIA_CONTROLS_MINI": {
        "prefix": "PRIM_MEDIA_CONTROLS_MINI",
        "body": [
           "PRIM_MEDIA_CONTROLS_MINI$0"
        ],
        "description": "PRIM_MEDIA_CONTROLS_MINI"
    },



    "AVOID_CHARACTERS": {
        "prefix": "AVOID_CHARACTERS",
        "body": [
           "AVOID_CHARACTERS$0"
        ],
        "description": "AVOID_CHARACTERS"
    },
    "AVOID_DYNAMIC_OBSTACLES": {
        "prefix": "AVOID_DYNAMIC_OBSTACLES",
        "body": [
           "AVOID_DYNAMIC_OBSTACLES$0"
        ],
        "description": "AVOID_DYNAMIC_OBSTACLES"
    },
    "AVOID_NONE": {
        "prefix": "AVOID_NONE",
        "body": [
           "AVOID_NONE$0"
        ],
        "description": "AVOID_NONE"
    },
    


    "SKY_TRACKS": {
        "prefix": "SKY_TRACKS",
        "body": [
           "SKY_TRACKS$0"
        ],
        "description": "float sky2, float sky3, float sky4\n\nAltitudes for sky transitions in the region."
    },
    "SKY_AMBIENT": {
        "prefix": "SKY_AMBIENT",
        "body": [
           "SKY_AMBIENT$0"
        ],
        "description": "vector ambient_color\n\nThe ambient color of the environment."
    },
    "SKY_TEXTURE_DEFAULTS": {
        "prefix": "SKY_TEXTURE_DEFAULTS",
        "body": [
           "SKY_TEXTURE_DEFAULTS$0"
        ],
        "description": "integer bloom_is_default, integer halo_is_default, integer rainbow_is_default\n\nChecks if the textures are currently set to use the default. For default values, the returned integer is 1. If the texture uses something other than the default, the returned value is 0."
    },
    "SKY_CLOUDS": {
        "prefix": "SKY_CLOUDS",
        "body": [
           "SKY_CLOUDS$0"
        ],
        "description": "vector color, float coverage, float scale, float variance, vector scroll, vector density, vector detail, integer is_default\n\nEnvironmental cloud information.\n- color: The color used for the clouds.\n  range = [<0,0,0>, <1,1,1>]\n- coverage: The coverage percentage.\n  range = [0, 1]\n- scale: The scaling applied to the cloud textures.\n  range = (0 - 3]\n- variance: A randomizing factor applied to the main cloud layer\n  range = [0, 1]\n- scroll: The scroll speed of the clouds.\n- X is east/west\n  range = [<-50,-50>, <50,50>]\n- Y is north/south\n- Z is unused\n- density: The X/Y and D parameter used to generate cloud density\n  range = [<0,0,0>, <1,1,3>]\n- detail: The X/Y and D parameter used to generate cloud details.\n  range = [<0,0,0>, <1,1,1>]\n- is_default: 1 if the clouds are using the default texture."
    },
    "SKY_CLOUD_TEXTURE": {
        "prefix": "SKY_CLOUD_TEXTURE",
        "body": [
           "SKY_CLOUD_TEXTURE$0"
        ],
        "description": "string texture_ident\n\nName of item in inventory or UUID for texture to be used for the clouds."
    },
    "SKY_DOME": {
        "prefix": "SKY_DOME",
        "body": [
           "SKY_DOME$0"
        ],
        "description": "float offset, float radius, float max_altitude\n\nSky dome information.\n- offset: offset applied to the sky dome.\n  range = [0,1]\n- radius: radius of the sky dome.\n  range = [1000,2000]\n- maximum altitude: altitude of the sky dome.\n  range = [0,10000]"
    },
    "SKY_GAMMA": {
        "prefix": "SKY_GAMMA",
        "body": [
           "SKY_GAMMA$0"
        ],
        "description": "float gamma\n\nThe gamma value applied to the scene.\nrange = [0,20]"
    },
    "SKY_GLOW": {
        "prefix": "SKY_GLOW",
        "body": [
           "SKY_GLOW$0"
        ],
        "description": "float glow_size, float glow_focus\n\nGlow applied to the sun and moon.\n- glow_size: size of glow effect,\n  range = [0.2, 40]\n- glow_focus: focus of glow effect\n  Range [-10, 10]"
    },
    "SKY_MOON": {
        "prefix": "SKY_MOON",
        "body": [
           "SKY_MOON$0"
        ],
        "description": "rotation rot, float scale, float brightness, integer is_default_texture, vector direction, vector ambient_color, vector diffuse_color\n\nDetailed moon information\n- rot: The current rotation applied to the moon.\n  Normalized rotation.\n- scale: The current scale applied to the moon's texture\n  range = [0.25, 20]\n- brightness: The moon's brightness\n  range = [0,1]\n- is_default_texture: 1 if the moon texture is set to the default. 0 otherwise\n- direction: A unit vector pointing at the moon.\n- ambient_color: The ambient color of the moon\n- diffuse_color: The diffuse color applied to the moon."
    },
    "SKY_MOON_TEXTURE": {
        "prefix": "SKY_MOON_TEXTURE",
        "body": [
           "SKY_MOON_TEXTURE$0"
        ],
        "description": "string texture_ident\n\nName of texture in inventory or UUID for texture to be used for the moon."
    },
    "SKY_STAR_BRIGHTNESS": {
        "prefix": "SKY_STAR_BRIGHTNESS",
        "body": [
           "SKY_STAR_BRIGHTNESS$0"
        ],
        "description": "float brightness\n\nBrightness value applied to stars.\nrange = [0,500]"
    },
    "SKY_SUN": {
        "prefix": "SKY_SUN",
        "body": [
           "SKY_SUN$0"
        ],
        "description": "rotation rot, float scale, vector sun_color, integer is_default_texture, vector direction, vector ambient_color, vector diffuse_color\n\nDetailed sun information\n- rot: The current rotation applied to the sun.\n  Normalized rotation.\n- scale: The current scale applied to the sun's texture\n  range = [0.25, 20]\n- sun_color: The sun's color.\n range = [<0,0,0>, <1,1,1>]\n- is_default_texture: 1 if the sun texture is set to the default. 0 otherwise\n- direction: A unit vector pointing at the sun.\n- ambient_color: The ambient color of the sun.\n- diffuse_color: The diffuse color applied to the sun."
    },
    "SKY_PLANET": {
        "prefix": "SKY_PLANET",
        "body": [
           "SKY_PLANET$0"
        ],
        "description": "float planet_radius, float sky_bottom_radius, float sky_top_radius\n\nPlanet information used in rendering the sky\n- planet_radius: range = [1000, 32768]\n- sky_bottom_radius: range = [1000, 32768]\n- sky_top_radius: range = [1000, 32768]"
    },
    "SKY_REFRACTION": {
        "prefix": "SKY_REFRACTION",
        "body": [
           "SKY_REFRACTION$0"
        ],
        "description": "float moisture_level, float droplet_radius, float ice_level\n\nSky refraction parameters for rainbows and optical effects.\n- moisture_level: range = [0, 1]\n- droplet_radius: range = [5, 1000]\n- ice_level: range = [0, 1]"
    },
    "SKY_LIGHT": {
        "prefix": "SKY_LIGHT",
        "body": [
           "SKY_LIGHT$0"
        ],
        "description": "vector light_direction, vector total_ambient\n\nMiscellaneous lighting values\n- light_direction: unit vector indicating the direction of the dominant light source."
    },
    "WATER_BLUR_MULTIPLIER": {
        "prefix": "WATER_BLUR_MULTIPLIER",
        "body": [
           "WATER_BLUR_MULTIPLIER$0"
        ],
        "description": "float multiplier\n\nMultiplier applied to blur the scene when under water.\nrange = [-0.5, 0.5]"
    },
    "WATER_FOG": {
        "prefix": "WATER_FOG",
        "body": [
           "WATER_FOG$0"
        ],
        "description": "vector color, float density, float modulation\n\nFog parameters applied when underwater\n- color: The color of the underwater fog\n  range = [<0,0,0>, <1,1,1>]\n- density: Density exponent applied to the fog\n  range = [-10, 10]\n- modulation:\n  range = [0, 20]"
    },
    "WATER_FRESNEL": {
        "prefix": "WATER_FRESNEL",
        "body": [
           "WATER_FRESNEL$0"
        ],
        "description": "float offset, float scale\n\nFresnel scattering applied to the surface of the water.\n- offset: range = [0,1]\n- scale: range = [0,1]"
    },
    "WATER_TEXTURE_DEFAULTS": {
        "prefix": "WATER_TEXTURE_DEFAULTS",
        "body": [
           "WATER_TEXTURE_DEFAULTS$0"
        ],
        "description": "integer normal_is_default, integer transparent_is_default\n\nChecks if the textures are currently set to use the default. For default values the returned integer is 1, if the texture uses something other than the default this value is 0."
    },
    "WATER_NORMAL_TEXTURE": {
        "prefix": "WATER_NORMAL_TEXTURE",
        "body": [
           "WATER_NORMAL_TEXTURE$0"
        ],
        "description": "string texture_ident\n\nName of texture in inventory or UUID of texture to be used for the water normal."
    },
    "WATER_NORMAL_SCALE": {
        "prefix": "WATER_NORMAL_SCALE",
        "body": [
           "WATER_NORMAL_SCALE$0"
        ],
        "description": "vector scale\n\nScaling applied to the water normal map.\nrange = [<0,0,0>, <10,10,10>]"
    },
    "WATER_REFRACTION": {
        "prefix": "WATER_REFRACTION",
        "body": [
           "WATER_REFRACTION$0"
        ],
        "description": "float scale_above, float scale_below\n\nRefraction factors when looking through the surface of the water.\n- scale_above: range = [0, 3]\n- scale_below: range = [0, 3]"
    },
    "WATER_WAVE_DIRECTION": {
        "prefix": "WATER_WAVE_DIRECTION",
        "body": [
           "WATER_WAVE_DIRECTION$0"
        ],
        "description": "vector large_wave, vector small_wave\n\nVector for the directions of the waves Y represents north/south and X represents movement east/west.\n- large_wave: Large wave speed and direction.\n  range = [<-20, -20>, <20, 20>]\n- small_wave: Small wave speed and direction.\n  range = [<-20, -20>, <20, 20>]"
    },
    "ENVIRONMENT_DAYINFO": {
        "prefix": "ENVIRONMENT_DAYINFO",
        "body": [
           "ENVIRONMENT_DAYINFO$0"
        ],
        "description": "integer day_length, integer day_offset, float secs_since_midnight\n\nCurrent time and day information\n- day_length: Number of seconds in the environments day cycle.\n- day_offset: Number of seconds day cycle is offset from GMT.\n- secs_since_midnight: Number of seconds elapsed since the last day cycle midnight."
    },



    
    "ENV_NOT_EXPERIENCE": {
        "prefix": "ENV_NOT_EXPERIENCE",
        "body": [
           "ENV_NOT_EXPERIENCE$0"
        ],
        "description": "The script is not running as part of an experience with a valid experience key."
    },
    "ENV_NO_EXPERIENCE_PERMISSION": {
        "prefix": "ENV_NO_EXPERIENCE_PERMISSION",
        "body": [
           "ENV_NO_EXPERIENCE_PERMISSION$0"
        ],
        "description": "The agent has not granted permission."
    },
    "ENV_NO_ENVIRONMENT": {
        "prefix": "ENV_NO_ENVIRONMENT",
        "body": [
           "ENV_NO_ENVIRONMENT$0"
        ],
        "description": "The environment inventory object could not be found."
    },
    "ENV_INVALID_AGENT": {
        "prefix": "ENV_INVALID_AGENT",
        "body": [
           "ENV_INVALID_AGENT$0"
        ],
        "description": "Unable to find specified agent."
    },
    "ENV_NO_EXPERIENCE_LAND": {
        "prefix": "ENV_NO_EXPERIENCE_LAND",
        "body": [
           "ENV_NO_EXPERIENCE_LAND$0"
        ],
        "description": "The experience has not been enabled or can not run on the land."
    },
    


    "WANDER_PAUSE_AT_WAYPOINTS": {
        "prefix": "WANDER_PAUSE_AT_WAYPOINTS",
        "body": [
           "WANDER_PAUSE_AT_WAYPOINTS$0"
        ],
        "description": "Whether the character should pause after reaching each wander waypoint."
    },



    "PU_SLOWDOWN_DISTANCE_REACHED": {
        "prefix": "PU_SLOWDOWN_DISTANCE_REACHED",
        "body": [
           "PU_SLOWDOWN_DISTANCE_REACHED$0"
        ],
        "description": "Character is near current goal."
    },
    "PU_GOAL_REACHED": {
        "prefix": "PU_GOAL_REACHED",
        "body": [
           "PU_GOAL_REACHED$0"
        ],
        "description": "Character has reached the goal and will stop or choose a new goal (if wandering)."
    },
    "PU_FAILURE_INVALID_START": {
        "prefix": "PU_FAILURE_INVALID_START",
        "body": [
           "PU_FAILURE_INVALID_START$0"
        ],
        "description": "Character cannot navigate from the current location - e.g., the character is off the navmesh or too high above it."
    },
    "PU_FAILURE_INVALID_GOAL": {
        "prefix": "PU_FAILURE_INVALID_GOAL",
        "body": [
           "PU_FAILURE_INVALID_GOAL$0"
        ],
        "description": "Goal is not on the navmesh and cannot be reached."
    },
    "PU_FAILURE_UNREACHABLE": {
        "prefix": "PU_FAILURE_UNREACHABLE",
        "body": [
           "PU_FAILURE_UNREACHABLE$0"
        ],
        "description": "Goal is no longer reachable for some reason - e.g., an obstacle blocks the path."
    },
    "PU_FAILURE_TARGET_GONE": {
        "prefix": "PU_SLOWDOWN_DISTANCE_REACHED",
        "body": [
           "PU_SLOWDOWN_DISTANCE_REACHED$0"
        ],
        "description": "Target (for llPursue or llEvade) can no longer be tracked - e.g., it left the region or is an avatar that is now more than about 30m outside the region."
    },
    "PU_FAILURE_NO_VALID_DESTINATION": {
        "prefix": "PU_FAILURE_NO_VALID_DESTINATION",
        "body": [
           "PU_FAILURE_NO_VALID_DESTINATION$0"
        ],
        "description": "There's no good place for the character to go - e.g., it is patrolling and all the patrol points are now unreachable."
    },
    "PU_EVADE_HIDDEN": {
        "prefix": "PU_EVADE_HIDDEN",
        "body": [
           "PU_EVADE_HIDDEN$0"
        ],
        "description": "Triggered when an llEvade character thinks it has hidden from its pursuer."
    },
    "PU_EVADE_SPOTTED": {
        "prefix": "PU_EVADE_SPOTTED",
        "body": [
           "PU_EVADE_SPOTTED$0"
        ],
        "description": "Triggered when an llEvade character switches from hiding to running"
    },
    "PU_FAILURE_NO_NAVMESH": {
        "prefix": "PU_FAILURE_NO_NAVMESH",
        "body": [
           "PU_FAILURE_NO_NAVMESH$0"
        ],
        "description": "This is a fatal error reported to a character when there is no navmesh for the region. This usually indicates a server failure and users should file a bug report and include the time and region in which they received this message."
    },
    "PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED": {
        "prefix": "PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED",
        "body": [
           "PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED$0"
        ],
        "description": "Triggered when a character enters a region with dynamic pathfinding disabled. Dynamic pathfinding can be toggled by estate managers via the 'dynamic_pathfinding' option in the Region Debug Console."
    },
    "PU_FAILURE_PARCEL_UNREACHABLE": {
        "prefix": "PU_FAILURE_PARCEL_UNREACHABLE",
        "body": [
           "PU_FAILURE_PARCEL_UNREACHABLE$0"
        ],
        "description": "Triggered when a character failed to enter a parcel because it is not allowed to enter, e.g. because the parcel is already full or because object entry was disabled after the navmesh was baked."
    },
    "PU_FAILURE_OTHER": {
        "prefix": "PU_FAILURE_OTHER",
        "body": [
           "PU_FAILURE_OTHER$0"
        ],
        "description": "Other failure."
    },



    "DENSITY": {
        "prefix": "DENSITY",
        "body": [
           "DENSITY$0"
        ],
        "description": "Indicates that density parameter is enabled and will override the previous value."
    },
    "FRICTION": {
        "prefix": "FRICTION",
        "body": [
           "FRICTION$0"
        ],
        "description": "Indicates that friction parameter is enabled and will override the previous value."
    },
    "RESTITUTION": {
        "prefix": "RESTITUTION",
        "body": [
           "RESTITUTION$0"
        ],
        "description": "Indicates that restitution parameter is enabled and will override the previous value."
    },
    "GRAVITY_MULTIPLIER": {
        "prefix": "GRAVITY_MULTIPLIER",
        "body": [
           "GRAVITY_MULTIPLIER$0"
        ],
        "description": "Indicates that gravity_multiplier parameter is enabled and will override the previous value."
    },



    "LINDENDOLLAR_INSUFFICIENTFUNDS": {
        "prefix": "LINDENDOLLAR_INSUFFICIENTFUNDS",
        "body": [
           "LINDENDOLLAR_INSUFFICIENTFUNDS$0"
        ],
        "description": "The source agent does not have enough L$ for the transfer"
    },
    "LINDENDOLLAR_ENTITYDOESNOTEXIST": {
        "prefix": "LINDENDOLLAR_ENTITYDOESNOTEXIST",
        "body": [
           "LINDENDOLLAR_ENTITYDOESNOTEXIST$0"
        ],
        "description": "The destination UUID is not a valid agent."
    },
    "LINDENDOLLAR_BADCLOCKSKEW": {
        "prefix": "LINDENDOLLAR_BADCLOCKSKEW",
        "body": [
           "LINDENDOLLAR_BADCLOCKSKEW$0"
        ],
        "description": "There is bad clock skew between the sim host and the L$ service"
    },
    "INVALID_DESTINATION": {
        "prefix": "INVALID_DESTINATION",
        "body": [
           "INVALID_DESTINATION$0"
        ],
        "description": "Destination agent is not a valid UUID"
    },
    "INVALID_AMOUNT": {
        "prefix": "INVALID_AMOUNT",
        "body": [
           "INVALID_AMOUNT$0"
        ],
        "description": "Amount is <= 0"
    },
    "THROTTLED": {
        "prefix": "THROTTLED",
        "body": [
           "THROTTLED$0"
        ],
        "description": "The scripted L$ throttle was hit for this object owner."
    },
    "MISSING_PERMISSION_DEBIT": {
        "prefix": "MISSING_PERMISSION_DEBIT",
        "body": [
           "MISSING_PERMISSION_DEBIT$0"
        ],
        "description": "The script does not have debit permission"
    },
    "GROUP_OWNED": {
        "prefix": "GROUP_OWNED",
        "body": [
           "GROUP_OWNED$0"
        ],
        "description": "The object is group owned and thus can't give money"
    },
    "TRANSFERS_DISABLED": {
        "prefix": "TRANSFERS_DISABLED",
        "body": [
           "TRANSFERS_DISABLED$0"
        ],
        "description": "L$ transfers are disabled in the region"
    },
    "EXPIRED": {
        "prefix": "EXPIRED",
        "body": [
           "EXPIRED$0"
        ],
        "description": "The simulator timed out waiting for a response from the back-end service."
    },
    "SERVICE_ERROR": {
        "prefix": "SERVICE_ERROR",
        "body": [
           "SERVICE_ERROR$0"
        ],
        "description": "There was an error connecting to the back-end service"
    },
    "LINKSETDATA_OK": {
        "prefix": "LINKSETDATA_OK",
        "body": [
           "LINKSETDATA_OK$0"
        ],
        "description": "The name:value pair was written to the datastore."
    },
    "LINKSETDATA_EMEMORY": {
        "prefix": "LINKSETDATA_EMEMORY",
        "body": [
           "LINKSETDATA_EMEMORY$0"
        ],
        "description": "A name:value pair was too large to write to the linkset datastore."
    },
    "LINKSETDATA_ENOKEY": {
        "prefix": "LINKSETDATA_ENOKEY",
        "body": [
           "LINKSETDATA_ENOKEY$0"
        ],
        "description": "The name supplied to llLinksetDataWrite was empty."
    },
    "LINKSETDATA_EPROTECTED": {
        "prefix": "LINKSETDATA_EPROTECTED",
        "body": [
           "LINKSETDATA_EPROTECTED$0"
        ],
        "description": "The name:value pair has been protected from overwrite in the linkset's datastore."
    },
    "LINKSETDATA_NOTFOUND": {
        "prefix": "LINKSETDATA_NOTFOUND",
        "body": [
           "LINKSETDATA_NOTFOUND$0"
        ],
        "description": "The named key could not be found in the linkset's datastore when attempting to delete it."
    },
    "LINKSETDATA_NOUPDATE": {
        "prefix": "LINKSETDATA_NOUPDATE",
        "body": [
           "LINKSETDATA_NOUPDATE$0"
        ],
        "description": "The name:value stored in the linkset was not changed by the write operation because the value stored matches the value written."
    }
}